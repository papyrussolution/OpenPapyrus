// PPDBS.H
// This file was generated by DL600C.EXE from 'D:\Papyrus\Src\Rsrc\dl600\ppdbs.dl6'
//
#ifndef __PPDBS_H
#define __PPDBS_H

#include <db.h>
#include <dl600.h>

#pragma pack(push)
#pragma pack(1)
class Reference2Tbl : public DBTable {
public:
	Reference2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjType;
		int32  ObjID;
		char   ObjName[48];
		char   Symb[20];
		uint8  ExtData[64]; // raw
		int32  Val1;
		int32  Val2;
	} data;
	struct Key0 {
		int32  ObjType;
		int32  ObjID;
	};
	struct Key1 {
		int32  ObjType;
		char   ObjName[48];
	};
	struct Key2 {
		int32  ObjType;
		int32  Val1;
	};
	struct Key3 {
		int32  ObjType;
		int32  Val2;
	};
	DBField ObjType;
	DBField ObjID;
	DBField ObjName;
	DBField Symb;
	DBField ExtData;
	DBField Val1;
	DBField Val2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PropertyTbl : public DBTable {
public:
	PropertyTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjType;
		int32  ObjID;
		int32  Prop;
		uint8  Text[64];   // raw
		int32  Val1;
		int32  Val2;
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int32  ObjType;
		int32  ObjID;
		int32  Prop;
	};
	struct Key1 {
		int32  ObjType;
		int32  Prop;
		int32  ObjID;
	};
	DBField ObjType;
	DBField ObjID;
	DBField Prop;
	DBField Text;
	DBField Val1;
	DBField Val2;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class UuidRefTbl : public DBTable {
public:
	UuidRefTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		uint8  UUID[16];   // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		uint8  UUID[16];
	};
	DBField ID;
	DBField UUID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TextRefTbl : public DBTable {
public:
	TextRefTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjID;
		int16  ObjType;
		int16  Prop;
		int16  Lang;
		wchar_t Text[125];
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int16  ObjType;
		int16  Prop;
		wchar_t Text[125];
	};
	struct Key1 {
		int16  ObjType;
		int16  Prop;
		int32  ObjID;
		int16  Lang;
	};
	DBField ObjID;
	DBField ObjType;
	DBField Prop;
	DBField Lang;
	DBField Text;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class UnxTextRefTbl : public DBTable {
public:
	UnxTextRefTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjID;
		int16  ObjType;
		int16  Prop;
		int16  Lang;
		int32  Size;
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int16  ObjType;
		int16  Prop;
		int32  ObjID;
		int16  Lang;
	};
	DBField ObjID;
	DBField ObjType;
	DBField Prop;
	DBField Lang;
	DBField Size;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ExtCodeRefTbl : public DBTable {
public:
	ExtCodeRefTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		char   Code[156];
		uint8  Reserve[32]; // raw
		TSLob <2048> VT;
	} data;
	struct Key0 {
		char   Code[156];
	};
	DBField Code;
	DBField Reserve;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjLikenessTbl : public DBTable {
public:
	ObjLikenessTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjType;
		int32  ID1;
		int32  ID2;
		double Rate;
	} data;
	struct Key0 {
		int32  ObjType;
		int32  ID1;
		int32  ID2;
	};
	struct Key1 {
		int32  ObjType;
		int32  ID1;
		double Rate;
	};
	struct Key2 {
		int32  ObjType;
		double Rate;
	};
	DBField ObjType;
	DBField ID1;
	DBField ID2;
	DBField Rate;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjSyncTbl : public DBTable {
public:
	ObjSyncTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int16  DBID;
		int16  ObjType;
		int32  ObjID;
		int16  CommIdPfx;
		int32  CommID;
		int16  Flags;
		LDATE  Dt;
		LTIME  Tm;
	} data;
	struct Key0 {
		int16  ObjType;
		int16  CommIdPfx;
		int32  CommID;
		int16  DBID;
	};
	struct Key1 {
		int16  ObjType;
		int32  ObjID;
		int16  DBID;
	};
	DBField DBID;
	DBField ObjType;
	DBField ObjID;
	DBField CommIdPfx;
	DBField CommID;
	DBField Flags;
	DBField Dt;
	DBField Tm;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjSyncBuTbl : public DBTable {
public:
	ObjSyncBuTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int16  ObjType;
		int32  ObjID;
		int16  CommIdPfx;
		int32  CommID;
		int16  Flags;
		int16  SDt;
		LTIME  Tm;
	} data;
	struct Key0 {
		int16  ObjType;
		int16  CommIdPfx;
		int32  CommID;
	};
	struct Key1 {
		int16  ObjType;
		int32  ObjID;
	};
	DBField ObjType;
	DBField ObjID;
	DBField CommIdPfx;
	DBField CommID;
	DBField Flags;
	DBField SDt;
	DBField Tm;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjSyncQueueTbl : public DBTable {
public:
	ObjSyncQueueTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int16  DBID;
		int16  ObjType;
		int32  ObjID;
		int16  CommIdPfx;
		int32  CommID;
		int16  Flags;
		int32  PrimObjID;
		LDATE  ModDt;
		LTIME  ModTm;
		int32  Priority;
		int32  FileId;
		int32  FilePos;
		int32  RedirID;
		char   ObjName[256]; // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int16  ObjType;
		int32  ObjID;
		int16  DBID;
	};
	struct Key2 {
		int16  ObjType;
		int16  CommIdPfx;
		int32  CommID;
		int16  DBID;
	};
	struct Key3 {
		int32  Priority;
		LDATE  ModDt;
		LTIME  ModTm;
	};
	struct Key4 {
		int32  RedirID;
	};
	DBField ID;
	DBField DBID;
	DBField ObjType;
	DBField ObjID;
	DBField CommIdPfx;
	DBField CommID;
	DBField Flags;
	DBField PrimObjID;
	DBField ModDt;
	DBField ModTm;
	DBField Priority;
	DBField FileId;
	DBField FilePos;
	DBField RedirID;
	DBField ObjName;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjAssocTbl : public DBTable {
public:
	ObjAssocTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  AsscType;
		int32  PrmrObjID;
		int32  ScndObjID;
		int32  InnerNum;
		uint8  Text[64];   // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  AsscType;
		int32  PrmrObjID;
		int32  ScndObjID;
	};
	struct Key2 {
		int32  AsscType;
		int32  ScndObjID;
		int32  PrmrObjID;
	};
	struct Key3 {
		int32  AsscType;
		int32  PrmrObjID;
		int32  InnerNum;
	};
	DBField ID;
	DBField AsscType;
	DBField PrmrObjID;
	DBField ScndObjID;
	DBField InnerNum;
	DBField Text;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjTagTbl : public DBTable {
public:
	ObjTagTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjType;
		int32  ObjID;
		int32  TagID;
		int32  TagByObj;
		int32  IntVal;
		double RealVal;
		char   StrVal[128];
	} data;
	struct Key0 {
		int32  ObjType;
		int32  ObjID;
		int32  TagID;
		int32  TagByObj;
	};
	struct Key1 {
		int32  TagID;
		int32  ObjID;
	};
	struct Key2 {
		int32  TagID;
		int32  IntVal;
	};
	struct Key3 {
		int32  TagID;
		char   StrVal[128];
	};
	DBField ObjType;
	DBField ObjID;
	DBField TagID;
	DBField TagByObj;
	DBField IntVal;
	DBField RealVal;
	DBField StrVal;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class EAddrTbl : public DBTable {
public:
	EAddrTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  LinkObjType;
		int32  LinkObjID;
		uint8  Addr[16];   // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		uint8  Addr[16];
		int32  LinkObjType;
		int32  LinkObjID;
	};
	struct Key2 {
		int32  LinkObjType;
		int32  LinkObjID;
		uint8  Addr[16];
	};
	DBField ID;
	DBField LinkObjType;
	DBField LinkObjID;
	DBField Addr;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class WorldTbl : public DBTable {
public:
	WorldTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Kind;
		int32  ParentID;
		int32  CountryID;
		int32  Status;
		int32  Flags;
		int32  CurrencyID;
		double Latitude;
		double Longitude;
		char   Name[48];
		char   Abbr[20];
		char   Phone[20];
		char   Code[20];
		char   ZIP[12];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  ParentID;
		char   Name[48];
	};
	struct Key2 {
		int32  CountryID;
		char   Name[48];
	};
	struct Key3 {
		int32  Kind;
		char   Name[48];
	};
	struct Key4 {
		char   Code[20];
	};
	DBField ID;
	DBField Kind;
	DBField ParentID;
	DBField CountryID;
	DBField Status;
	DBField Flags;
	DBField CurrencyID;
	DBField Latitude;
	DBField Longitude;
	DBField Name;
	DBField Abbr;
	DBField Phone;
	DBField Code;
	DBField ZIP;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempKLADRTbl : public DBTable {
public:
	TempKLADRTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  ParentID;
		int32  StatusCode;
		char   Name[48];
		char   Code[20];
		char   ZIP[8];
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		char   Code[20];
	};
	struct Key2 {
		int32  ParentID;
		char   Name[48];
	};
	DBField ID__;
	DBField ParentID;
	DBField StatusCode;
	DBField Name;
	DBField Code;
	DBField ZIP;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class FiasAddrObjTbl : public DBTable {
public:
	FiasAddrObjTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  RecUuID;
		int32  IdUuRef;
		int32  ParentUuRef;
		int32  PrevRecUuRef;
		int32  NextRecUuRef;
		int32  NameTRef;
		int32  OfcNameTRef;
		int32  SnTRef;
		int32  Flags;
		int16  LevelStatus;
		int16  CenterStatus;
		int16  ActionStatus;
		int16  KladrCurStatus;
		int16  IfnsJ;
		int16  TerrIfnsJ;
		int16  IfnsI;
		int16  TerrIfnsI;
		int32  OkatoTRef;
		int32  OktmoTRef;
		int32  PostalCode;
		int32  KladrCodeTRef;
		LDATE  UpdateDt;
		LDATE  StartDt;
		LDATE  EndDt;
	} data;
	struct Key0 {
		int32  RecUuID;
	};
	struct Key1 {
		int32  IdUuRef;
	};
	struct Key2 {
		int32  ParentUuRef;
	};
	struct Key3 {
		int32  NameTRef;
	};
	struct Key4 {
		int32  KladrCodeTRef;
	};
	struct Key5 {
		int32  PostalCode;
	};
	DBField RecUuID;
	DBField IdUuRef;
	DBField ParentUuRef;
	DBField PrevRecUuRef;
	DBField NextRecUuRef;
	DBField NameTRef;
	DBField OfcNameTRef;
	DBField SnTRef;
	DBField Flags;
	DBField LevelStatus;
	DBField CenterStatus;
	DBField ActionStatus;
	DBField KladrCurStatus;
	DBField IfnsJ;
	DBField TerrIfnsJ;
	DBField IfnsI;
	DBField TerrIfnsI;
	DBField OkatoTRef;
	DBField OktmoTRef;
	DBField PostalCode;
	DBField KladrCodeTRef;
	DBField UpdateDt;
	DBField StartDt;
	DBField EndDt;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class FiasHouseObjTbl : public DBTable {
public:
	FiasHouseObjTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  IdUuRef;
		int32  ParentUuRef;
		int32  IntStart;
		int32  IntEnd;
		int16  IntStatus;
		int16  EstStatus;
		int16  BuildStatus;
		int32  NumTRef;
		int16  IfnsJ;
		int16  TerrIfnsJ;
		int16  IfnsI;
		int16  TerrIfnsI;
		int32  OkatoTRef;
		int32  OktmoTRef;
		int32  PostalCode;
		LDATE  UpdateDt;
		LDATE  StartDt;
		LDATE  EndDt;
	} data;
	struct Key0 {
		int32  IdUuRef;
	};
	struct Key1 {
		int32  ParentUuRef;
	};
	struct Key2 {
		int32  IntStart;
		int32  IntEnd;
		int32  ParentUuRef;
	};
	struct Key3 {
		int32  NumTRef;
		int32  ParentUuRef;
	};
	struct Key4 {
		int32  PostalCode;
		int32  ParentUuRef;
	};
	DBField IdUuRef;
	DBField ParentUuRef;
	DBField IntStart;
	DBField IntEnd;
	DBField IntStatus;
	DBField EstStatus;
	DBField BuildStatus;
	DBField NumTRef;
	DBField IfnsJ;
	DBField TerrIfnsJ;
	DBField IfnsI;
	DBField TerrIfnsI;
	DBField OkatoTRef;
	DBField OktmoTRef;
	DBField PostalCode;
	DBField UpdateDt;
	DBField StartDt;
	DBField EndDt;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class GeoTrackTbl : public DBTable {
public:
	GeoTrackTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int16  ObjType;
		int16  ExtObjType;
		int32  ObjID;
		int32  ExtObjID;
		int32  Flags;
		int16  ExtEvent;
		int16  Dts2010;
		LTIME  Tm;
		double Latitude;
		double Longitude;
		int16  Altitude;
		int16  Speed;
	} data;
	struct Key0 {
		int16  ObjType;
		int32  ObjID;
		int16  Dts2010;
		LTIME  Tm;
	};
	struct Key1 {
		int16  ExtObjType;
		int32  ExtObjID;
		int16  Dts2010;
		LTIME  Tm;
	};
	DBField ObjType;
	DBField ExtObjType;
	DBField ObjID;
	DBField ExtObjID;
	DBField Flags;
	DBField ExtEvent;
	DBField Dts2010;
	DBField Tm;
	DBField Latitude;
	DBField Longitude;
	DBField Altitude;
	DBField Speed;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PersonTbl : public DBTable {
public:
	PersonTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[128];
		int32  Status;
		int32  MainLoc;
		int32  RLoc;
		int32  CatID;
		int32  Flags;
		int32  Division;
		int32  Position;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Name[128];
	};
	struct Key2 {
		int32  CatID;
		char   Name[128];
	};
	struct Key3 {
		int32  MainLoc;
	};
	struct Key4 {
		int32  RLoc;
	};
	DBField ID;
	DBField Name;
	DBField Status;
	DBField MainLoc;
	DBField RLoc;
	DBField CatID;
	DBField Flags;
	DBField Division;
	DBField Position;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PersonKindTbl : public DBTable {
public:
	PersonKindTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  KindID;
		int32  PersonID;
		char   Name[128];
	} data;
	struct Key0 {
		int32  KindID;
		char   Name[128];
		int32  PersonID;
	};
	struct Key1 {
		int32  PersonID;
		int32  KindID;
	};
	DBField KindID;
	DBField PersonID;
	DBField Name;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class RegisterTbl : public DBTable {
public:
	RegisterTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ObjType;
		int32  ObjID;
		int32  PsnEventID;
		int32  RegTypeID;
		LDATE  Dt;
		int32  RegOrgID;
		char   Serial[32];
		char   Num[128];
		LDATE  Expiry;
		int32  UniqCntr;
		int32  Flags;
		int32  ExtID;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  ObjType;
		int32  ObjID;
	};
	struct Key2 {
		int32  PsnEventID;
	};
	struct Key3 {
		int32  RegTypeID;
		char   Serial[32];
		char   Num[128];
		int32  UniqCntr;
	};
	struct Key4 {
		int32  RegTypeID;
		char   Num[128];
		char   Serial[32];
		int32  UniqCntr;
	};
	DBField ID;
	DBField ObjType;
	DBField ObjID;
	DBField PsnEventID;
	DBField RegTypeID;
	DBField Dt;
	DBField RegOrgID;
	DBField Serial;
	DBField Num;
	DBField Expiry;
	DBField UniqCntr;
	DBField Flags;
	DBField ExtID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PersonEventTbl : public DBTable {
public:
	PersonEventTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  Dt;
		int32  OprNo;
		int32  OpID;
		int32  PersonID;
		int32  SecondID;
		int32  LocationID;
		int32  Extra;
		int32  Flags;
		int32  LinkBillID;
		LTIME  Tm;
		int16  EstDuration;
		uint8  Reserve[18]; // raw
		int32  PrmrSCardID;
		int32  ScndSCardID;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		int32  OpID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key3 {
		int32  PersonID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key4 {
		int32  SecondID;
		LDATE  Dt;
		int32  OprNo;
	};
	DBField ID;
	DBField Dt;
	DBField OprNo;
	DBField OpID;
	DBField PersonID;
	DBField SecondID;
	DBField LocationID;
	DBField Extra;
	DBField Flags;
	DBField LinkBillID;
	DBField Tm;
	DBField EstDuration;
	DBField Reserve;
	DBField PrmrSCardID;
	DBField ScndSCardID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PersonPostTbl : public DBTable {
public:
	PersonPostTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Code[16];
		int32  StaffID;
		int32  PersonID;
		LDATE  Dt;
		LDATE  Finish;
		int32  ChargeGrpID;
		int32  Flags;
		int16  Closed;
		int16  Reserve1;
		int32  PsnEventID;
		uint8  Reserve2[28]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  StaffID;
		int32  PersonID;
		int16  Closed;
	};
	struct Key2 {
		int32  PersonID;
		int32  StaffID;
		int16  Closed;
	};
	struct Key3 {
		int32  PsnEventID;
	};
	DBField ID;
	DBField Code;
	DBField StaffID;
	DBField PersonID;
	DBField Dt;
	DBField Finish;
	DBField ChargeGrpID;
	DBField Flags;
	DBField Closed;
	DBField Reserve1;
	DBField PsnEventID;
	DBField Reserve2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class StaffCalendarTbl : public DBTable {
public:
	StaffCalendarTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CalID;
		int32  ObjID;
		int16  Kind;
		int16  Flags;
		int32  DtVal;
		int32  TmVal;
		LTIME  TmStart;
		LTIME  TmEnd;
	} data;
	struct Key0 {
		int32  CalID;
		int32  DtVal;
		LTIME  TmStart;
	};
	struct Key1 {
		int32  CalID;
		int32  ObjID;
		int32  DtVal;
		LTIME  TmStart;
	};
	struct Key2 {
		int32  ObjID;
		int32  CalID;
		int32  DtVal;
		LTIME  TmStart;
	};
	DBField CalID;
	DBField ObjID;
	DBField Kind;
	DBField Flags;
	DBField DtVal;
	DBField TmVal;
	DBField TmStart;
	DBField TmEnd;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempStaffCalTbl : public DBTable {
public:
	TempStaffCalTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  CalID;
		int32  LinkObjID;
		int32  NameIdx;
		LDATE  Dt;
		LTIME  TmStart;
		LTIME  TmEnd;
		int32  TmVal;
		char   DtText[32];
		int32  Count;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		LDATE  Dt;
		int32  NameIdx;
		int32  CalID;
	};
	struct Key2 {
		int32  NameIdx;
		LDATE  Dt;
		int32  CalID;
	};
	struct Key3 {
		int32  CalID;
		int32  LinkObjID;
		LDATE  Dt;
		LTIME  TmStart;
	};
	DBField ID__;
	DBField CalID;
	DBField LinkObjID;
	DBField NameIdx;
	DBField Dt;
	DBField TmStart;
	DBField TmEnd;
	DBField TmVal;
	DBField DtText;
	DBField Count;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SalaryTbl : public DBTable {
public:
	SalaryTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  Beg;
		LDATE  End;
		int32  PostID;
		int32  SalChargeID;
		double Amount;
		int32  Flags;
		int32  LinkBillID;
		int32  GenBillID;
		int32  RByGenBill;
		int32  ExtObjID;
		uint8  Reserve[28]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  PostID;
		int32  SalChargeID;
		int32  ExtObjID;
		LDATE  Beg;
	};
	struct Key2 {
		LDATE  Beg;
		int32  PostID;
		int32  SalChargeID;
		int32  ExtObjID;
	};
	struct Key3 {
		int32  SalChargeID;
		int32  ExtObjID;
		LDATE  Beg;
		int32  PostID;
	};
	struct Key4 {
		int32  GenBillID;
		int32  RByGenBill;
	};
	struct Key5 {
		int32  LinkBillID;
	};
	DBField ID;
	DBField Beg;
	DBField End;
	DBField PostID;
	DBField SalChargeID;
	DBField Amount;
	DBField Flags;
	DBField LinkBillID;
	DBField GenBillID;
	DBField RByGenBill;
	DBField ExtObjID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempSalaryTbl : public DBTable {
public:
	TempSalaryTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  Beg;
		LDATE  End;
		int32  PostID;
		int32  SalChargeID;
		int32  ExtObjID;
		double Amount;
		int32  Flags;
		int32  LinkBillID;
		int32  GenBillID;
		int32  RByGenBill;
		int32  StaffID;
		int32  PersonID;
		int32  OrgID;
		int32  DivID;
		char   Text[64];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Beg;
	};
	struct Key2 {
		char   Text[64];
	};
	struct Key3 {
		int32  PostID;
		int32  SalChargeID;
		int32  ExtObjID;
		LDATE  Beg;
	};
	DBField ID;
	DBField Beg;
	DBField End;
	DBField PostID;
	DBField SalChargeID;
	DBField ExtObjID;
	DBField Amount;
	DBField Flags;
	DBField LinkBillID;
	DBField GenBillID;
	DBField RByGenBill;
	DBField StaffID;
	DBField PersonID;
	DBField OrgID;
	DBField DivID;
	DBField Text;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Goods2Tbl : public DBTable {
public:
	Goods2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Kind;
		char   Name[128];
		char   Abbr[128];
		int32  ParentID;
		int32  GoodsTypeID;
		int32  UnitID;
		int32  PhUnitID;
		double PhUPerU;
		int32  ManufID;
		int32  StrucID;
		int32  TaxGrpID;
		int32  WrOffGrpID;
		int32  Flags;
		int32  GdsClsID;
		int32  BrandID;
		int32  DefBCodeStrucID;
		int32  DefPrcID;
		int32  RspnsPersonID;
		int32  GoodsLimit;
		int16  Rank;
		int16  VanType;
		uint8  Reserve[4]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  Kind;
		int32  ParentID;
		char   Name[128];
	};
	struct Key2 {
		int32  Kind;
		char   Name[128];
	};
	struct Key3 {
		int32  Kind;
		int32  BrandID;
	};
	struct Key4 {
		int32  Kind;
		char   Abbr[128];
	};
	struct Key5 {
		int32  StrucID;
	};
	DBField ID;
	DBField Kind;
	DBField Name;
	DBField Abbr;
	DBField ParentID;
	DBField GoodsTypeID;
	DBField UnitID;
	DBField PhUnitID;
	DBField PhUPerU;
	DBField ManufID;
	DBField StrucID;
	DBField TaxGrpID;
	DBField WrOffGrpID;
	DBField Flags;
	DBField GdsClsID;
	DBField BrandID;
	DBField DefBCodeStrucID;
	DBField DefPrcID;
	DBField RspnsPersonID;
	DBField GoodsLimit;
	DBField Rank;
	DBField VanType;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BarcodeTbl : public DBTable {
public:
	BarcodeTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		double Qtty;
		int32  BarcodeType;
		char   Code[24];
	} data;
	struct Key0 {
		char   Code[24];
	};
	struct Key1 {
		int32  GoodsID;
	};
	DBField GoodsID;
	DBField Qtty;
	DBField BarcodeType;
	DBField Code;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ArGoodsCodeTbl : public DBTable {
public:
	ArGoodsCodeTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		int32  ArID;
		int32  Pack;
		char   Code[24];
	} data;
	struct Key0 {
		int32  ArID;
		char   Code[24];
	};
	struct Key1 {
		char   Code[24];
		int32  ArID;
	};
	struct Key2 {
		int32  GoodsID;
		int32  ArID;
	};
	DBField GoodsID;
	DBField ArID;
	DBField Pack;
	DBField Code;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class GoodsExtTbl : public DBTable {
public:
	GoodsExtTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		int32  GoodsClsID;
		int32  KindID;
		int32  GradeID;
		int32  AddObjID;
		int32  X;
		int32  Y;
		int32  Z;
		int32  W;
		int32  AddObj2ID;
		int32  UniqCntr;
		int32  Reserve;
		double TaxFactor;
	} data;
	struct Key0 {
		int32  GoodsID;
	};
	struct Key1 {
		int32  GoodsClsID;
		int32  KindID;
		int32  GradeID;
		int32  X;
		int32  Y;
		int32  Z;
		int32  AddObjID;
		int32  AddObj2ID;
		int32  W;
		int32  UniqCntr;
	};
	DBField GoodsID;
	DBField GoodsClsID;
	DBField KindID;
	DBField GradeID;
	DBField AddObjID;
	DBField X;
	DBField Y;
	DBField Z;
	DBField W;
	DBField AddObj2ID;
	DBField UniqCntr;
	DBField Reserve;
	DBField TaxFactor;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PackageTbl : public DBTable {
public:
	PackageTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  PrevID;
		int32  PckgTypeID;
		int32  LocID;
		char   Code[16];
		int16  Closed;
		int16  UniqCntr;
		int32  Flags;
		uint8  Reserve[48]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int16  Closed;
		char   Code[16];
		int32  PckgTypeID;
		int16  UniqCntr;
	};
	struct Key2 {
		int32  PrevID;
		int32  ID;
	};
	DBField ID;
	DBField PrevID;
	DBField PckgTypeID;
	DBField LocID;
	DBField Code;
	DBField Closed;
	DBField UniqCntr;
	DBField Flags;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PackageLinkTbl : public DBTable {
public:
	PackageLinkTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  PckgID;
		int32  LotID;
	} data;
	struct Key0 {
		int32  PckgID;
		int32  LotID;
	};
	struct Key1 {
		int32  LotID;
	};
	DBField PckgID;
	DBField LotID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SpecSeriesTbl : public DBTable {
public:
	SpecSeriesTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		char   Serial[64];
		char   Barcode[64];
		char   GoodsName[128];
		char   ManufName[128];
		LDATE  InfoDate;
		int32  InfoKind;
		char   InfoIdent[24];
		uint8  Reserve[48]; // raw
		int32  GoodsID;
		int32  LabID;
		char   LabName[160];
		int32  ManufID;
		int32  ManufCountryID;
		char   ManufCountryName[128];
		LDATE  AllowDate;
		char   AllowNumber[24];
		char   SpecName[160];
		char   LetterType[8];
		int32  Flags;
	} data;
	struct Key0 {
		int32  InfoKind;
		char   Serial[64];
	};
	struct Key1 {
		int32  InfoKind;
		char   Barcode[64];
	};
	struct Key2 {
		int32  InfoKind;
		char   InfoIdent[24];
	};
	DBField Serial;
	DBField Barcode;
	DBField GoodsName;
	DBField ManufName;
	DBField InfoDate;
	DBField InfoKind;
	DBField InfoIdent;
	DBField Reserve;
	DBField GoodsID;
	DBField LabID;
	DBField LabName;
	DBField ManufID;
	DBField ManufCountryID;
	DBField ManufCountryName;
	DBField AllowDate;
	DBField AllowNumber;
	DBField SpecName;
	DBField LetterType;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SpecSeries2Tbl : public DBTable {
public:
	SpecSeries2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Serial[32];
		char   Barcode[32];
		LDATE  InfoDate;
		int32  InfoKind;
		char   InfoIdent[24];
		int32  GoodsID;
		int32  LabID;
		int32  ManufID;
		int32  ManufCountryID;
		LDATE  AllowDate;
		char   AllowNumber[24];
		char   LetterType[8];
		int32  Flags;
		uint8  Reserve[48]; // raw
		char   Tail[1024]; // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  InfoKind;
		char   Serial[32];
	};
	struct Key2 {
		int32  InfoKind;
		char   Barcode[32];
	};
	struct Key3 {
		int32  InfoKind;
		char   InfoIdent[24];
	};
	struct Key4 {
		int32  InfoKind;
		LDATE  InfoDate;
		char   Serial[32];
	};
	struct Key5 {
		int32  InfoKind;
		int32  GoodsID;
	};
	struct Key6 {
		int32  InfoKind;
		int32  ManufID;
	};
	DBField ID;
	DBField Serial;
	DBField Barcode;
	DBField InfoDate;
	DBField InfoKind;
	DBField InfoIdent;
	DBField GoodsID;
	DBField LabID;
	DBField ManufID;
	DBField ManufCountryID;
	DBField AllowDate;
	DBField AllowNumber;
	DBField LetterType;
	DBField Flags;
	DBField Reserve;
	DBField Tail;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class LocationTbl : public DBTable {
public:
	LocationTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Counter;
		int32  ParentID;
		int16  Type;
		int16  Flags;
		int32  OwnerID;
		int32  CityID;
		int32  RspnsPersonID;
		double Latitude;
		double Longitude;
		int16  NumRows;
		int16  NumLayers;
		int32  MassCapacity;
		int32  X;
		int32  Y;
		int32  Z;
		int32  DisposeRestr;
		int16  DisposeRestrCount;
		int16  Depth;
		char   Name[48];
		char   Code[16];
		char   Tail[1024]; // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  Counter;
	};
	struct Key2 {
		int16  Type;
		int32  ParentID;
		int32  Counter;
	};
	struct Key3 {
		int16  Type;
		int32  OwnerID;
		int32  Counter;
	};
	struct Key4 {
		int32  CityID;
		int32  Counter;
	};
	struct Key5 {
		char   Code[16];
		int32  Counter;
	};
	DBField ID;
	DBField Counter;
	DBField ParentID;
	DBField Type;
	DBField Flags;
	DBField OwnerID;
	DBField CityID;
	DBField RspnsPersonID;
	DBField Latitude;
	DBField Longitude;
	DBField NumRows;
	DBField NumLayers;
	DBField MassCapacity;
	DBField X;
	DBField Y;
	DBField Z;
	DBField DisposeRestr;
	DBField DisposeRestrCount;
	DBField Depth;
	DBField Name;
	DBField Code;
	DBField Tail;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CurrencyRateTbl : public DBTable {
public:
	CurrencyRateTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		int32  CurID;
		int32  RelCurID;
		int32  RateTypeID;
		double Rate;
	} data;
	struct Key0 {
		int32  RateTypeID;
		int32  CurID;
		int32  RelCurID;
		LDATE  Dt;
	};
	struct Key1 {
		int32  CurID;
		int32  RelCurID;
		int32  RateTypeID;
		LDATE  Dt;
	};
	DBField Dt;
	DBField CurID;
	DBField RelCurID;
	DBField RateTypeID;
	DBField Rate;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BillTbl : public DBTable {
public:
	BillTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Code[48];
		LDATE  Dt;
		int32  BillNo;
		LDATE  DueDate;
		int32  OpID;
		int32  StatusID;
		int32  UserID;
		int32  LocID;
		int32  Object;
		int32  Object2;
		int32  CurID;
		double CRate;
		double Amount;
		int32  LinkBillID;
		int32  Flags;
		int32  Flags2;
		int32  SCardID;
		LDATE  PeriodLow;
		LDATE  PeriodUpp;
		int16  LastRByBill;
		int16  EdiOp;
		double PaymAmount;
		int32  AgtBillID;
		uint8  Reserve[16]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key2 {
		int32  OpID;
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key3 {
		int32  Object;
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key4 {
		int32  LinkBillID;
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key5 {
		int32  LocID;
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key6 {
		int32  SCardID;
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key7 {
		char   Code[48];
		LDATE  Dt;
		int32  BillNo;
	};
	DBField ID;
	DBField Code;
	DBField Dt;
	DBField BillNo;
	DBField DueDate;
	DBField OpID;
	DBField StatusID;
	DBField UserID;
	DBField LocID;
	DBField Object;
	DBField Object2;
	DBField CurID;
	DBField CRate;
	DBField Amount;
	DBField LinkBillID;
	DBField Flags;
	DBField Flags2;
	DBField SCardID;
	DBField PeriodLow;
	DBField PeriodUpp;
	DBField LastRByBill;
	DBField EdiOp;
	DBField PaymAmount;
	DBField AgtBillID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BillAmountTbl : public DBTable {
public:
	BillAmountTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		int32  AmtTypeID;
		int32  CurID;
		double Amount;
	} data;
	struct Key0 {
		int32  BillID;
		int32  AmtTypeID;
		int32  CurID;
	};
	DBField BillID;
	DBField AmtTypeID;
	DBField CurID;
	DBField Amount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PayPlanTbl : public DBTable {
public:
	PayPlanTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		LDATE  PayDate;
		double Amount;
		double Interest;
	} data;
	struct Key0 {
		int32  BillID;
		LDATE  PayDate;
	};
	DBField BillID;
	DBField PayDate;
	DBField Amount;
	DBField Interest;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ReceiptTbl : public DBTable {
public:
	ReceiptTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  BillID;
		int32  LocID;
		LDATE  Dt;
		int32  OprNo;
		int16  Closed;
		int16  Reserve1;
		int32  GoodsID;
		int32  QCertID;
		double UnitPerPack;
		double Quantity;
		float  WtQtty;
		float  WtRest;
		double Cost;
		double ExtCost;
		double Price;
		double Rest;
		int32  PrevLotID;
		int32  SupplID;
		LDATE  CloseDate;
		LDATE  Expiry;
		int32  InTaxGrpID;
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		int32  GoodsID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key3 {
		int16  Closed;
		int32  GoodsID;
		int32  LocID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key4 {
		int32  PrevLotID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key5 {
		int32  SupplID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key6 {
		int32  QCertID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key7 {
		int32  LocID;
		int16  Closed;
		LDATE  Dt;
		int32  OprNo;
	};
	DBField ID;
	DBField BillID;
	DBField LocID;
	DBField Dt;
	DBField OprNo;
	DBField Closed;
	DBField Reserve1;
	DBField GoodsID;
	DBField QCertID;
	DBField UnitPerPack;
	DBField Quantity;
	DBField WtQtty;
	DBField WtRest;
	DBField Cost;
	DBField ExtCost;
	DBField Price;
	DBField Rest;
	DBField PrevLotID;
	DBField SupplID;
	DBField CloseDate;
	DBField Expiry;
	DBField InTaxGrpID;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CurRestTbl : public DBTable {
public:
	CurRestTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LocID;
		int32  GoodsID;
		double Rest;
	} data;
	struct Key0 {
		int32  GoodsID;
		int32  LocID;
	};
	struct Key1 {
		int32  LocID;
		int32  GoodsID;
	};
	DBField LocID;
	DBField GoodsID;
	DBField Rest;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class LotCurRestTbl : public DBTable {
public:
	LotCurRestTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		double LDRest;
		int32  LotID;
		int16  D;
	} data;
	struct Key0 {
		int32  LotID;
		int16  D;
	};
	struct Key1 {
		int16  D;
		int32  LotID;
	};
	DBField LDRest;
	DBField LotID;
	DBField D;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class LotCurRest2Tbl : public DBTable {
public:
	LotCurRest2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LDRestF;
		int32  LotID;
		int16  D;
	} data;
	struct Key0 {
		int32  LotID;
		int16  D;
	};
	struct Key1 {
		int16  D;
		int32  LotID;
	};
	DBField LDRestF;
	DBField LotID;
	DBField D;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class LotExtCodeTbl : public DBTable {
public:
	LotExtCodeTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LotID;
		int32  BillID;
		int16  RByBill;
		int16  Flags;
		int32  BoxNo;
		char   Code[156];
	} data;
	struct Key0 {
		int32  LotID;
		int32  BillID;
		int16  RByBill;
		char   Code[156];
	};
	struct Key1 {
		char   Code[156];
		int32  BillID;
		int16  RByBill;
	};
	struct Key2 {
		int32  BillID;
		int16  RByBill;
		int32  BoxNo;
		char   Code[156];
	};
	DBField LotID;
	DBField BillID;
	DBField RByBill;
	DBField Flags;
	DBField BoxNo;
	DBField Code;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class EgaisProductTbl : public DBTable {
public:
	EgaisProductTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   AlcCode[24];
		char   ManufRarIdent[16];
		char   ImporterRarIdent[16];
		char   CategoryCode[8];
		int32  Proof;
		int32  Volume;
		LDATE  ActualDate;
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   AlcCode[24];
	};
	DBField ID;
	DBField AlcCode;
	DBField ManufRarIdent;
	DBField ImporterRarIdent;
	DBField CategoryCode;
	DBField Proof;
	DBField Volume;
	DBField ActualDate;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class EgaisPersonTbl : public DBTable {
public:
	EgaisPersonTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   RarIdent[16];
		char   INN[16];
		char   KPP[16];
		char   UNP[16];
		char   RNN[16];
		int16  CountryCode;
		int16  RegionCode;
		int32  Flags;
		LDATE  ActualDate;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   RarIdent[16];
	};
	struct Key2 {
		char   INN[16];
	};
	DBField ID;
	DBField RarIdent;
	DBField INN;
	DBField KPP;
	DBField UNP;
	DBField RNN;
	DBField CountryCode;
	DBField RegionCode;
	DBField Flags;
	DBField ActualDate;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class EgaisRefATbl : public DBTable {
public:
	EgaisRefATbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   RefACode[20];
		char   AlcCode[24];
		char   ManufRarIdent[16];
		char   ImporterRarIdent[16];
		char   ShipperRarIdent[16];
		char   ConsigneeRarIdent[16];
		char   EgaisNumber[24];
		char   TTNNumber[48];
		int16  CountryCode;
		int32  Volume;
		LDATE  BottlingDate;
		LDATE  ActualDate;
		int32  Flags;
		LDATE  EgaisDate;
		LDATE  TTNDate;
		uint8  Reserve[12]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   RefACode[20];
	};
	struct Key2 {
		char   AlcCode[24];
	};
	DBField ID;
	DBField RefACode;
	DBField AlcCode;
	DBField ManufRarIdent;
	DBField ImporterRarIdent;
	DBField ShipperRarIdent;
	DBField ConsigneeRarIdent;
	DBField EgaisNumber;
	DBField TTNNumber;
	DBField CountryCode;
	DBField Volume;
	DBField BottlingDate;
	DBField ActualDate;
	DBField Flags;
	DBField EgaisDate;
	DBField TTNDate;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class VetisEntityTbl : public DBTable {
public:
	VetisEntityTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  GuidRef;
		int32  UuidRef;
		int32  Kind;
		int32  Flags;
		int32  Status;
		int32  NextGuidRef;
		uint8  Reserve[128]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  GuidRef;
		int32  UuidRef;
	};
	struct Key2 {
		int32  UuidRef;
		int32  GuidRef;
	};
	struct Key3 {
		int32  Kind;
	};
	DBField ID;
	DBField GuidRef;
	DBField UuidRef;
	DBField Kind;
	DBField Flags;
	DBField Status;
	DBField NextGuidRef;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class VetisProductTbl : public DBTable {
public:
	VetisProductTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  EntityID;
		int32  LinkGoodsID;
		int32  ProductType;
		int32  ProductID;
		int32  SubProductID;
		int32  ProducerLocID;
		int32  GostTRef;
		char   GTIN[16];
		char   ArCode[24];
		uint8  Reserve[88]; // raw
	} data;
	struct Key0 {
		int32  EntityID;
	};
	struct Key1 {
		int32  LinkGoodsID;
	};
	struct Key2 {
		int32  ProductID;
	};
	struct Key3 {
		int32  SubProductID;
	};
	struct Key4 {
		char   GTIN[16];
	};
	DBField EntityID;
	DBField LinkGoodsID;
	DBField ProductType;
	DBField ProductID;
	DBField SubProductID;
	DBField ProducerLocID;
	DBField GostTRef;
	DBField GTIN;
	DBField ArCode;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class VetisPersonTbl : public DBTable {
public:
	VetisPersonTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  EntityID;
		int32  LinkPersonID;
		int32  EnterpriseType;
		int32  CountryID;
		int32  RegionID;
		char   INN[16];
		char   KPP[16];
		int32  LinkDlvrLocID;
		uint8  Reserve[124]; // raw
	} data;
	struct Key0 {
		int32  EntityID;
	};
	struct Key1 {
		int32  LinkPersonID;
	};
	struct Key2 {
		char   INN[16];
	};
	DBField EntityID;
	DBField LinkPersonID;
	DBField EnterpriseType;
	DBField CountryID;
	DBField RegionID;
	DBField INN;
	DBField KPP;
	DBField LinkDlvrLocID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class VetisDocumentTbl : public DBTable {
public:
	VetisDocumentTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  EntityID;
		int32  LinkBillID;
		int16  LinkBillRow;
		int16  VetisDocForm;
		int16  VetisDocType;
		int16  VetisDocStatus;
		LDATE  IssueDate;
		char   IssueNumber[64];
		LDATE  WayBillDate;
		char   WayBillNumber[64];
		int32  FromEntityID;
		int32  FromEnterpriseID;
		int32  ToEntityID;
		int32  ToEnterpriseID;
		int32  ProductID;
		int32  SubProductID;
		int32  ProductItemID;
		int32  OrgCountryID;
		int32  UOMID;
		int16  ProductType;
		int16  TranspStrgType;
		int16  TranspType;
		int16  Reserve;
		int32  Flags;
		double Volume;
		int64  ManufDateFrom;
		int64  ManufDateTo;
		int64  ExpiryFrom;
		int64  ExpiryTo;
		int32  ConfirmNameTRef;
		int32  ConfirmPostTRef;
		int32  PackingAmount;
		int32  LinkGoodsID;
		int32  LinkFromPsnID;
		int32  LinkFromDlvrLocID;
		int32  LinkToPsnID;
		int32  LinkToDlvrLocID;
		int32  OrgDocEntityID;
		double AckVolume;
		S_GUID AppReqId;
		int32  DepDocEntityID;
		uint8  Reserve2[8]; // raw
	} data;
	struct Key0 {
		int32  EntityID;
	};
	struct Key1 {
		int32  LinkBillID;
		int16  LinkBillRow;
	};
	struct Key2 {
		LDATE  IssueDate;
		char   IssueNumber[64];
	};
	struct Key3 {
		LDATE  WayBillDate;
		char   WayBillNumber[64];
	};
	struct Key4 {
		int32  FromEntityID;
	};
	struct Key5 {
		int32  FromEnterpriseID;
	};
	struct Key6 {
		int32  ToEntityID;
	};
	struct Key7 {
		int32  ToEnterpriseID;
	};
	struct Key8 {
		int32  ProductItemID;
	};
	struct Key9 {
		int32  OrgDocEntityID;
	};
	DBField EntityID;
	DBField LinkBillID;
	DBField LinkBillRow;
	DBField VetisDocForm;
	DBField VetisDocType;
	DBField VetisDocStatus;
	DBField IssueDate;
	DBField IssueNumber;
	DBField WayBillDate;
	DBField WayBillNumber;
	DBField FromEntityID;
	DBField FromEnterpriseID;
	DBField ToEntityID;
	DBField ToEnterpriseID;
	DBField ProductID;
	DBField SubProductID;
	DBField ProductItemID;
	DBField OrgCountryID;
	DBField UOMID;
	DBField ProductType;
	DBField TranspStrgType;
	DBField TranspType;
	DBField Reserve;
	DBField Flags;
	DBField Volume;
	DBField ManufDateFrom;
	DBField ManufDateTo;
	DBField ExpiryFrom;
	DBField ExpiryTo;
	DBField ConfirmNameTRef;
	DBField ConfirmPostTRef;
	DBField PackingAmount;
	DBField LinkGoodsID;
	DBField LinkFromPsnID;
	DBField LinkFromDlvrLocID;
	DBField LinkToPsnID;
	DBField LinkToDlvrLocID;
	DBField OrgDocEntityID;
	DBField AckVolume;
	DBField AppReqId;
	DBField DepDocEntityID;
	DBField Reserve2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class InventoryTbl : public DBTable {
public:
	InventoryTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		int32  OprNo;
		int32  GoodsID;
		int32  Flags;
		double UnitPerPack;
		double Quantity;
		double StockRest;
		double Price;
		double StockPrice;
		double DiffQtty;
		double DiffPctQtty;
		double UnwritedDiff;
		double CSesDfctQtty;
		double CSesDfctPrice;
		double WrOffPrice;
		char   Serial[24];
	} data;
	struct Key0 {
		int32  BillID;
		int32  OprNo;
	};
	struct Key1 {
		int32  BillID;
		int32  GoodsID;
		char   Serial[24];
	};
	struct Key2 {
		int32  GoodsID;
		char   Serial[24];
		int32  BillID;
	};
	DBField BillID;
	DBField OprNo;
	DBField GoodsID;
	DBField Flags;
	DBField UnitPerPack;
	DBField Quantity;
	DBField StockRest;
	DBField Price;
	DBField StockPrice;
	DBField DiffQtty;
	DBField DiffPctQtty;
	DBField UnwritedDiff;
	DBField CSesDfctQtty;
	DBField CSesDfctPrice;
	DBField WrOffPrice;
	DBField Serial;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempInventorySubstTbl : public DBTable {
public:
	TempInventorySubstTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		char   Name[128];
		double Quantity;
		double StockRest;
		double SumPrice;
		double SumStockPrice;
		double SumWrOffPrice;
		double DiffQtty;
		double DiffPctQtty;
		double DiffPrice;
	} data;
	struct Key0 {
		int32  GoodsID;
	};
	struct Key1 {
		char   Name[128];
	};
	DBField GoodsID;
	DBField Name;
	DBField Quantity;
	DBField StockRest;
	DBField SumPrice;
	DBField SumStockPrice;
	DBField SumWrOffPrice;
	DBField DiffQtty;
	DBField DiffPctQtty;
	DBField DiffPrice;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class QuotationTbl : public DBTable {
public:
	QuotationTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  Dt;
		LTIME  Tm;
		int32  OprNo;
		int32  GoodsID;
		int32  Kind;
		int32  Location;
		int32  Flags;
		int16  Actual;
		int32  ArID;
		uint8  Reserve1[2]; // raw
		int32  MinQtty;
		double Quot;
		int32  CurID;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		int32  GoodsID;
		int16  Actual;
		LDATE  Dt;
		int32  OprNo;
	};
	DBField ID;
	DBField Dt;
	DBField Tm;
	DBField OprNo;
	DBField GoodsID;
	DBField Kind;
	DBField Location;
	DBField Flags;
	DBField Actual;
	DBField ArID;
	DBField Reserve1;
	DBField MinQtty;
	DBField Quot;
	DBField CurID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Quot2RelTbl : public DBTable {
public:
	Quot2RelTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  QuotKindID;
		int32  LocID;
		int32  ArID;
		int32  CurID;
		int32  MinQtty;
		int32  PeriodIdx;
		uint8  Reserve[28];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  QuotKindID;
		int32  LocID;
		int32  ArID;
		int32  CurID;
		int32  PeriodIdx;
		int32  MinQtty;
	};
	struct Key2 {
		int32  LocID;
	};
	struct Key3 {
		int32  ArID;
	};
	DBField ID;
	DBField QuotKindID;
	DBField LocID;
	DBField ArID;
	DBField CurID;
	DBField MinQtty;
	DBField PeriodIdx;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Quotation2Tbl : public DBTable {
public:
	Quotation2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  RelID;
		int32  GoodsID;
		LDATE  Dt;
		LTIME  Tm;
		int16  Actual;
		int16  Flags;
		int32  TaID;
		double Quot;
	} data;
	struct Key0 {
		int32  GoodsID;
		int32  RelID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key1 {
		int32  RelID;
		int32  GoodsID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int16  Actual;
		int32  RelID;
		int32  GoodsID;
	};
	struct Key3 {
		int16  Actual;
		int32  GoodsID;
		int32  RelID;
	};
	struct Key4 {
		LDATE  Dt;
		LTIME  Tm;
		int32  GoodsID;
		int32  RelID;
	};
	struct Key5 {
		int32  TaID;
		int32  GoodsID;
	};
	DBField RelID;
	DBField GoodsID;
	DBField Dt;
	DBField Tm;
	DBField Actual;
	DBField Flags;
	DBField TaID;
	DBField Quot;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PriceListTbl : public DBTable {
public:
	PriceListTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  SupplID;
		int32  LocID;
		LDATE  Dt;
		int32  QuotKindID;
		int32  Flags;
		int32  GoodsGrpID;
		int32  UserID;
		uint8  Reserve[16]; // raw
		char   Memo[512];  // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  UserID;
		int32  SupplID;
		int32  LocID;
		int32  QuotKindID;
		LDATE  Dt;
	};
	DBField ID;
	DBField SupplID;
	DBField LocID;
	DBField Dt;
	DBField QuotKindID;
	DBField Flags;
	DBField GoodsGrpID;
	DBField UserID;
	DBField Reserve;
	DBField Memo;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PriceLineTbl : public DBTable {
public:
	PriceLineTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ListID;
		int32  GoodsID;
		int16  LineNo;
		int32  GoodsGrpID;
		int32  ManufID;
		char   Name[64];
		int32  UnitID;
		int16  IsPresent;
		double UnitPerPack;
		double Price;
		int32  QuotKindID;
		double AddPrice1;
		double AddPrice2;
		double AddPrice3;
		uint8  Reserve[20]; // raw
		int32  GoodsCode;
		double Rest;
		LDATE  Expiry;
		char   Memo[512];  // note
	} data;
	struct Key0 {
		int32  ListID;
		int32  GoodsID;
		int32  QuotKindID;
		int16  LineNo;
	};
	struct Key1 {
		int32  ListID;
		char   Name[64];
		int32  QuotKindID;
	};
	struct Key2 {
		int32  ListID;
		int32  GoodsGrpID;
		char   Name[64];
		int32  QuotKindID;
	};
	DBField ListID;
	DBField GoodsID;
	DBField LineNo;
	DBField GoodsGrpID;
	DBField ManufID;
	DBField Name;
	DBField UnitID;
	DBField IsPresent;
	DBField UnitPerPack;
	DBField Price;
	DBField QuotKindID;
	DBField AddPrice1;
	DBField AddPrice2;
	DBField AddPrice3;
	DBField Reserve;
	DBField GoodsCode;
	DBField Rest;
	DBField Expiry;
	DBField Memo;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TransferTbl : public DBTable {
public:
	TransferTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LocID;
		LDATE  Dt;
		int32  OprNo;
		int32  BillID;
		int16  RByBill;
		int16  Reverse;
		int32  CorrLoc;
		int32  LotID;
		int32  GoodsID;
		int32  Flags;
		double Quantity;
		double Rest;
		double Cost;
		float  WtQtty;
		float  WtRest;
		double Price;
		double QuotPrice;
		double Discount;
		int32  CurID;
		double CurPrice;
	} data;
	struct Key0 {
		int32  BillID;
		int16  Reverse;
		int16  RByBill;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		int32  LotID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key3 {
		int32  GoodsID;
		LDATE  Dt;
		int32  OprNo;
	};
	DBField LocID;
	DBField Dt;
	DBField OprNo;
	DBField BillID;
	DBField RByBill;
	DBField Reverse;
	DBField CorrLoc;
	DBField LotID;
	DBField GoodsID;
	DBField Flags;
	DBField Quantity;
	DBField Rest;
	DBField Cost;
	DBField WtQtty;
	DBField WtRest;
	DBField Price;
	DBField QuotPrice;
	DBField Discount;
	DBField CurID;
	DBField CurPrice;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class LocTransfTbl : public DBTable {
public:
	LocTransfTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LocID;
		int32  RByLoc;
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int32  BillID;
		int16  RByBill;
		int16  LTOp;
		int16  Domain;
		int16  PalletCount;
		int32  Flags;
		int32  GoodsID;
		int32  LotID;
		double Qtty;
		double RestByGoods;
		double RestByLot;
		int32  LinkLocID;
		int32  LinkRByLoc;
		int32  PalletTypeID;
		int32  LocOwnerPersonID;
		uint8  Reserve2[20]; // raw
	} data;
	struct Key0 {
		int32  LocID;
		int32  RByLoc;
	};
	struct Key1 {
		int32  LotID;
		int32  LocID;
		int32  RByLoc;
	};
	struct Key2 {
		int32  GoodsID;
		int32  LocID;
		int32  RByLoc;
	};
	struct Key3 {
		int32  BillID;
		int16  RByBill;
	};
	struct Key4 {
		int32  LinkLocID;
		int32  LinkRByLoc;
	};
	struct Key5 {
		int16  Domain;
		int16  LTOp;
		int32  LocID;
		int32  GoodsID;
		int32  RByLoc;
	};
	DBField LocID;
	DBField RByLoc;
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField BillID;
	DBField RByBill;
	DBField LTOp;
	DBField Domain;
	DBField PalletCount;
	DBField Flags;
	DBField GoodsID;
	DBField LotID;
	DBField Qtty;
	DBField RestByGoods;
	DBField RestByLot;
	DBField LinkLocID;
	DBField LinkRByLoc;
	DBField PalletTypeID;
	DBField LocOwnerPersonID;
	DBField Reserve2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempLocTransfTbl : public DBTable {
public:
	TempLocTransfTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  LocID;
		int32  RByLoc;
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int32  BillID;
		int16  RByBill;
		int16  LTOp;
		int16  Domain;
		int16  PalletCount;
		int32  Flags;
		int32  GoodsID;
		double BillQtty;
		double DispQtty;
		double RestByGoods;
		double RestByLot;
		int32  PalletTypeID;
		int32  LocOwnerPersonID;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		int32  BillID;
		int16  RByBill;
	};
	struct Key2 {
		int32  LocID;
		int32  RByLoc;
	};
	DBField ID__;
	DBField LocID;
	DBField RByLoc;
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField BillID;
	DBField RByBill;
	DBField LTOp;
	DBField Domain;
	DBField PalletCount;
	DBField Flags;
	DBField GoodsID;
	DBField BillQtty;
	DBField DispQtty;
	DBField RestByGoods;
	DBField RestByLot;
	DBField PalletTypeID;
	DBField LocOwnerPersonID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class GoodsDebtTbl : public DBTable {
public:
	GoodsDebtTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		int32  ArID;
		int32  DlvrLocID;
		LDATE  Dt;
		double SaldoQtty;
		double SaldoAmount;
	} data;
	struct Key0 {
		int32  GoodsID;
		int32  ArID;
		int32  DlvrLocID;
		LDATE  Dt;
	};
	struct Key1 {
		int32  ArID;
		int32  DlvrLocID;
		int32  GoodsID;
		LDATE  Dt;
	};
	DBField GoodsID;
	DBField ArID;
	DBField DlvrLocID;
	DBField Dt;
	DBField SaldoQtty;
	DBField SaldoAmount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CpTransfTbl : public DBTable {
public:
	CpTransfTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		int16  RByBill;
		int16  Reserve1;
		int32  GoodsID;
		int32  LocID;
		int32  OrdLotID;
		int32  CurID;
		double UnitPerPack;
		double Qtty;
		double Rest;
		double Cost;
		double Price;
		double Discount;
		double CurPrice;
		LDATE  Expiry;
		int32  QCertID;
		int32  InTaxGrpID;
		int32  Flags;
		char   Tail[128];  // note
	} data;
	struct Key0 {
		int32  BillID;
		int16  RByBill;
	};
	struct Key1 {
		int32  GoodsID;
		int32  LocID;
	};
	DBField BillID;
	DBField RByBill;
	DBField Reserve1;
	DBField GoodsID;
	DBField LocID;
	DBField OrdLotID;
	DBField CurID;
	DBField UnitPerPack;
	DBField Qtty;
	DBField Rest;
	DBField Cost;
	DBField Price;
	DBField Discount;
	DBField CurPrice;
	DBField Expiry;
	DBField QCertID;
	DBField InTaxGrpID;
	DBField Flags;
	DBField Tail;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class AdvBillItemTbl : public DBTable {
public:
	AdvBillItemTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		int16  RByBill;
		int16  Reserve2;
		char   AdvCode[24];
		LDATE  AdvDt;
		int32  AdvBillKindID;
		int32  AdvBillID;
		int32  AccID;
		int32  ArID;
		int32  Flags;
		int32  CalcGrpID;
		double Amount;
		double ExtAmt1;
		double ExtAmt2;
		double ExtAmt3;
		double ExtAmt4;
		double ExtAmt5;
		uint8  Reserve[36]; // raw
		char   Memo[128];  // note
	} data;
	struct Key0 {
		int32  BillID;
		int16  RByBill;
	};
	struct Key1 {
		int32  AccID;
		int32  ArID;
		int32  BillID;
		int16  RByBill;
	};
	struct Key2 {
		int32  AdvBillID;
		int32  BillID;
		int16  RByBill;
	};
	DBField BillID;
	DBField RByBill;
	DBField Reserve2;
	DBField AdvCode;
	DBField AdvDt;
	DBField AdvBillKindID;
	DBField AdvBillID;
	DBField AccID;
	DBField ArID;
	DBField Flags;
	DBField CalcGrpID;
	DBField Amount;
	DBField ExtAmt1;
	DBField ExtAmt2;
	DBField ExtAmt3;
	DBField ExtAmt4;
	DBField ExtAmt5;
	DBField Reserve;
	DBField Memo;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class WorkbookTbl : public DBTable {
public:
	WorkbookTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[128];
		char   Symb[20];
		int32  Type;
		int32  ParentID;
		int32  LinkID;
		int32  CssID;
		int32  Rank;
		int32  Flags;
		int16  KeywordCount;
		int16  KeywordDilute;
		LDATE  Dt;
		LTIME  Tm;
		char   Version[8];
		int32  OwnerGuaID;
		uint8  Reserve[24]; // raw
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Name[128];
	};
	struct Key2 {
		int32  Rank;
		char   Name[128];
	};
	struct Key3 {
		int32  Type;
		int32  Rank;
		char   Name[128];
	};
	struct Key4 {
		int32  ParentID;
		int32  Rank;
		char   Name[128];
	};
	struct Key5 {
		char   Symb[20];
	};
	DBField ID;
	DBField Name;
	DBField Symb;
	DBField Type;
	DBField ParentID;
	DBField LinkID;
	DBField CssID;
	DBField Rank;
	DBField Flags;
	DBField KeywordCount;
	DBField KeywordDilute;
	DBField Dt;
	DBField Tm;
	DBField Version;
	DBField OwnerGuaID;
	DBField Reserve;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ProjectTbl : public DBTable {
public:
	ProjectTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Kind;
		int32  ParentID;
		char   Name[128];
		char   Code[24];
		LDATE  Dt;
		LDATE  BeginDt;
		LDATE  EstFinishDt;
		LDATE  FinishDt;
		int32  MngrID;
		int32  ClientID;
		int32  TemplateID;
		int32  Status;
		int32  Flags;
		int32  BillOpID;
		uint8  Reserve[44]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  ParentID;
		char   Name[128];
	};
	struct Key2 {
		int32  ParentID;
		char   Code[24];
	};
	struct Key3 {
		LDATE  BeginDt;
		LDATE  EstFinishDt;
	};
	struct Key4 {
		LDATE  EstFinishDt;
	};
	DBField ID;
	DBField Kind;
	DBField ParentID;
	DBField Name;
	DBField Code;
	DBField Dt;
	DBField BeginDt;
	DBField EstFinishDt;
	DBField FinishDt;
	DBField MngrID;
	DBField ClientID;
	DBField TemplateID;
	DBField Status;
	DBField Flags;
	DBField BillOpID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PrjTaskTbl : public DBTable {
public:
	PrjTaskTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ProjectID;
		int32  Kind;
		char   Code[24];
		int32  CreatorID;
		int32  GroupID;
		int32  EmployerID;
		int32  ClientID;
		int32  TemplateID;
		LDATE  Dt;
		LTIME  Tm;
		LDATE  StartDt;
		LTIME  StartTm;
		LDATE  EstFinishDt;
		LTIME  EstFinishTm;
		LDATE  FinishDt;
		LTIME  FinishTm;
		int16  Priority;
		int16  Status;
		int16  DrPrd;
		int16  DrKind;
		int32  DrDetail;
		int32  Flags;
		int32  DlvrAddrID;
		int32  LinkTaskID;
		double Amount;
		int32  OpenCount;
		int32  BillArID;
		uint8  Reserve[16]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int32  ProjectID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		int32  TemplateID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key4 {
		int32  EmployerID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key5 {
		int32  ClientID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key6 {
		int32  LinkTaskID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField ProjectID;
	DBField Kind;
	DBField Code;
	DBField CreatorID;
	DBField GroupID;
	DBField EmployerID;
	DBField ClientID;
	DBField TemplateID;
	DBField Dt;
	DBField Tm;
	DBField StartDt;
	DBField StartTm;
	DBField EstFinishDt;
	DBField EstFinishTm;
	DBField FinishDt;
	DBField FinishTm;
	DBField Priority;
	DBField Status;
	DBField DrPrd;
	DBField DrKind;
	DBField DrDetail;
	DBField Flags;
	DBField DlvrAddrID;
	DBField LinkTaskID;
	DBField Amount;
	DBField OpenCount;
	DBField BillArID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SCardTbl : public DBTable {
public:
	SCardTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Code[24];
		int32  SeriesID;
		int32  PersonID;
		int32  Flags;
		LDATE  Dt;
		LDATE  Expiry;
		int32  PDis;
		int32  AutoGoodsID;
		double MaxCredit;
		double Turnover;
		double Rest;
		double InTrnovr;
		LTIME  UsageTmStart;
		LTIME  UsageTmEnd;
		int16  PeriodTerm;
		int16  PeriodCount;
		int32  LocID;
		int32  PoolDestSerID;
		int32  FixedBonus;
		uint8  Reserve[8]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Code[24];
		int32  SeriesID;
	};
	struct Key2 {
		int32  SeriesID;
		char   Code[24];
	};
	struct Key3 {
		int32  PersonID;
	};
	struct Key4 {
		int32  LocID;
	};
	DBField ID;
	DBField Code;
	DBField SeriesID;
	DBField PersonID;
	DBField Flags;
	DBField Dt;
	DBField Expiry;
	DBField PDis;
	DBField AutoGoodsID;
	DBField MaxCredit;
	DBField Turnover;
	DBField Rest;
	DBField InTrnovr;
	DBField UsageTmStart;
	DBField UsageTmEnd;
	DBField PeriodTerm;
	DBField PeriodCount;
	DBField LocID;
	DBField PoolDestSerID;
	DBField FixedBonus;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempSCardTbl : public DBTable {
public:
	TempSCardTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Code[24];
		int32  SeriesID;
		int32  PersonID;
		int32  Flags;
		LDATE  Dt;
		LDATE  Expiry;
		int32  PDis;
		int32  AutoGoodsID;
		double MaxCredit;
		double Turnover;
		double Rest;
		double InTrnovr;
		LTIME  UsageTmStart;
		LTIME  UsageTmEnd;
		int16  PeriodTerm;
		int16  PeriodCount;
		int32  LocID;
		uint8  Reserve[16]; // raw
		uint32 PhoneP;
		uint32 AddressP;
		uint32 ZipP;
		uint32 LocalAreaP;
		uint32 CityP;
		uint32 StreetP;
		uint32 HouseP;
		uint32 ApartP;
		uint32 AddrAddendP;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Code[24];
		int32  SeriesID;
	};
	struct Key2 {
		int32  SeriesID;
		char   Code[24];
	};
	DBField ID;
	DBField Code;
	DBField SeriesID;
	DBField PersonID;
	DBField Flags;
	DBField Dt;
	DBField Expiry;
	DBField PDis;
	DBField AutoGoodsID;
	DBField MaxCredit;
	DBField Turnover;
	DBField Rest;
	DBField InTrnovr;
	DBField UsageTmStart;
	DBField UsageTmEnd;
	DBField PeriodTerm;
	DBField PeriodCount;
	DBField LocID;
	DBField Reserve;
	DBField PhoneP;
	DBField AddressP;
	DBField ZipP;
	DBField LocalAreaP;
	DBField CityP;
	DBField StreetP;
	DBField HouseP;
	DBField ApartP;
	DBField AddrAddendP;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SCardOpTbl : public DBTable {
public:
	SCardOpTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  SCardID;
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int32  Flags;
		double Amount;
		double Rest;
		int32  DestSCardID;
		int32  LinkObjType;
		int32  LinkObjID;
		LDATE  FreezingStart;
		LDATE  FreezingEnd;
		int32  CtAmount;
		int32  CtRest;
		int32  CtGoodsID;
		uint8  Reserve[4]; // raw
	} data;
	struct Key0 {
		int32  SCardID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key1 {
		int32  LinkObjType;
		int32  LinkObjID;
		int32  SCardID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField SCardID;
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField Flags;
	DBField Amount;
	DBField Rest;
	DBField DestSCardID;
	DBField LinkObjType;
	DBField LinkObjID;
	DBField FreezingStart;
	DBField FreezingEnd;
	DBField CtAmount;
	DBField CtRest;
	DBField CtGoodsID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CSessionTbl : public DBTable {
public:
	CSessionTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  SuperSessID;
		int32  CashNodeID;
		int32  CashNumber;
		int32  SessNumber;
		LDATE  Dt;
		LTIME  Tm;
		int16  Incomplete;
		int16  Temporary;
		double Amount;
		double Discount;
		double AggrAmount;
		double AggrRest;
		double WrOffAmount;
		double WrOffCost;
		double Income;
		double BnkAmount;
		double CSCardAmount;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  CashNodeID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int32  CashNodeID;
		int32  CashNumber;
		int32  SessNumber;
		LDATE  Dt;
	};
	struct Key3 {
		int32  SuperSessID;
		int32  CashNumber;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key4 {
		LDATE  Dt;
		LTIME  Tm;
		int32  CashNodeID;
	};
	DBField ID;
	DBField SuperSessID;
	DBField CashNodeID;
	DBField CashNumber;
	DBField SessNumber;
	DBField Dt;
	DBField Tm;
	DBField Incomplete;
	DBField Temporary;
	DBField Amount;
	DBField Discount;
	DBField AggrAmount;
	DBField AggrRest;
	DBField WrOffAmount;
	DBField WrOffCost;
	DBField Income;
	DBField BnkAmount;
	DBField CSCardAmount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCSessChecksTbl : public DBTable {
public:
	TempCSessChecksTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  SuperSessID;
		int32  CashNodeID;
		int32  CashNumber;
		int32  SessNumber;
		LDATE  Dt;
		LTIME  Tm;
		int16  Incomplete;
		int16  Temporary;
		double Amount;
		double Discount;
		double AggrAmount;
		double AggrRest;
		double WrOffAmount;
		double WrOffCost;
		double Income;
		double BnkAmount;
		double CSCardAmount;
		int32  ChkCount;
		double WORetAmount;
		double WORetBnkAmount;
		double BnkDiscount;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  CashNodeID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int32  CashNodeID;
		int32  CashNumber;
		int32  SessNumber;
		LDATE  Dt;
	};
	struct Key3 {
		int32  SuperSessID;
		int32  CashNumber;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField SuperSessID;
	DBField CashNodeID;
	DBField CashNumber;
	DBField SessNumber;
	DBField Dt;
	DBField Tm;
	DBField Incomplete;
	DBField Temporary;
	DBField Amount;
	DBField Discount;
	DBField AggrAmount;
	DBField AggrRest;
	DBField WrOffAmount;
	DBField WrOffCost;
	DBField Income;
	DBField BnkAmount;
	DBField CSCardAmount;
	DBField ChkCount;
	DBField WORetAmount;
	DBField WORetBnkAmount;
	DBField BnkDiscount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CCheckTbl : public DBTable {
public:
	CCheckTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Code;
		int32  PosNodeID;
		int32  UserID;
		int32  SessID;
		LDATE  Dt;
		LTIME  Tm;
		int32  Flags;
		char   Amount[8];  // money[8.2]
		char   Discount[8]; // money[8.2]
		int32  SCardID;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
		int32  PosNodeID;
	};
	struct Key2 {
		int32  PosNodeID;
		int32  Code;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		int32  SessID;
		int32  PosNodeID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key4 {
		int32  SCardID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField Code;
	DBField PosNodeID;
	DBField UserID;
	DBField SessID;
	DBField Dt;
	DBField Tm;
	DBField Flags;
	DBField Amount;
	DBField Discount;
	DBField SCardID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CCheckExtTbl : public DBTable {
public:
	CCheckExtTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CheckID;
		int32  SalerID;
		int32  TableNo;
		int32  AddPaym_unused;
		int16  GuestCount;
		int16  Op_;
		int32  AddrID;
		int32  AddCrdCardID_unused;
		int32  CreationUserID;
		int32  LinkCheckID;
		LDATETIME StartOrdDtm;
		LDATETIME EndOrdDtm;
		LDATETIME CreationDtm;
		char   Memo[256];  // note
	} data;
	struct Key0 {
		int32  CheckID;
	};
	struct Key1 {
		int32  LinkCheckID;
		int32  CheckID;
	};
	struct Key2 {
		int32  TableNo;
		int32  CheckID;
	};
	DBField CheckID;
	DBField SalerID;
	DBField TableNo;
	DBField AddPaym_unused;
	DBField GuestCount;
	DBField Op_;
	DBField AddrID;
	DBField AddCrdCardID_unused;
	DBField CreationUserID;
	DBField LinkCheckID;
	DBField StartOrdDtm;
	DBField EndOrdDtm;
	DBField CreationDtm;
	DBField Memo;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CCheckPaymTbl : public DBTable {
public:
	CCheckPaymTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CheckID;
		int16  RByCheck;
		int16  PaymType;
		int32  Amount;
		int32  SCardID;
		int32  CurID;
		int32  CurAmount;
	} data;
	struct Key0 {
		int32  CheckID;
		int16  RByCheck;
	};
	struct Key1 {
		int32  SCardID;
		int32  CheckID;
	};
	DBField CheckID;
	DBField RByCheck;
	DBField PaymType;
	DBField Amount;
	DBField SCardID;
	DBField CurID;
	DBField CurAmount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCCheckQttyTbl : public DBTable {
public:
	TempCCheckQttyTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Code;
		int32  CashID;
		int32  UserID;
		int32  SessID;
		LDATE  Dt;
		LTIME  Tm;
		int32  Flags;
		double Amount;
		double Discount;
		double BnkAmt;
		double CrdCardAmt;
		int32  SCardID;
		double Qtty;
		int32  SkuCount;
		int32  LinesCount;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
		int32  CashID;
		int32  Code;
	};
	struct Key2 {
		int32  CashID;
		int32  Code;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		int32  SessID;
		int32  CashID;
		LDATE  Dt;
		LTIME  Tm;
		int32  Code;
	};
	struct Key4 {
		int32  SCardID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField Code;
	DBField CashID;
	DBField UserID;
	DBField SessID;
	DBField Dt;
	DBField Tm;
	DBField Flags;
	DBField Amount;
	DBField Discount;
	DBField BnkAmt;
	DBField CrdCardAmt;
	DBField SCardID;
	DBField Qtty;
	DBField SkuCount;
	DBField LinesCount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCCheckGrpTbl : public DBTable {
public:
	TempCCheckGrpTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		char   Text[128];
		char   Serial[32];
		LDATE  Dt;
		LTIME  Tm;
		int32  CashID;
		int32  SCardID;
		int32  GoodsID;
		int32  Count;
		int16  DivID;
		int16  GuestCount;
		int32  SkuCount;
		int32  LinesCount;
		double Amount;
		double Discount;
		double BnkAmt;
		double CrdCardAmt;
		double PctPart;
		double Qtty;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
		int32  CashID;
		int32  SCardID;
		int32  GoodsID;
		char   Serial[32];
	};
	struct Key2 {
		char   Text[128];
	};
	struct Key3 {
		int32  Count;
		LDATE  Dt;
		LTIME  Tm;
		char   Text[128];
	};
	struct Key4 {
		double Qtty;
		LDATE  Dt;
		LTIME  Tm;
		char   Text[128];
	};
	struct Key5 {
		double Amount;
		LDATE  Dt;
		LTIME  Tm;
		char   Text[128];
	};
	struct Key6 {
		char   Text[128];
		LDATE  Dt;
	};
	DBField ID__;
	DBField Text;
	DBField Serial;
	DBField Dt;
	DBField Tm;
	DBField CashID;
	DBField SCardID;
	DBField GoodsID;
	DBField Count;
	DBField DivID;
	DBField GuestCount;
	DBField SkuCount;
	DBField LinesCount;
	DBField Amount;
	DBField Discount;
	DBField BnkAmt;
	DBField CrdCardAmt;
	DBField PctPart;
	DBField Qtty;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCCheckGdsCorrTbl : public DBTable {
public:
	TempCCheckGdsCorrTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  Goods1ID;
		int32  Goods2ID;
		char   GoodsName1[64];
		char   GoodsName2[64];
		int32  Count;
		int32  ChecksCount;
		double ChecksCountPct;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		int32  Goods1ID;
		int32  Goods2ID;
	};
	struct Key2 {
		int32  Goods2ID;
		int32  Goods1ID;
	};
	struct Key3 {
		char   GoodsName1[64];
		int32  Count;
		char   GoodsName2[64];
	};
	struct Key4 {
		int32  Count;
		char   GoodsName1[64];
		char   GoodsName2[64];
	};
	DBField ID__;
	DBField Goods1ID;
	DBField Goods2ID;
	DBField GoodsName1;
	DBField GoodsName2;
	DBField Count;
	DBField ChecksCount;
	DBField ChecksCountPct;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCCheckLineTbl : public DBTable {
public:
	TempCCheckLineTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CheckID;
		int32  CheckCode;
		int16  DivID;
		LDATE  Dt;
		int32  GoodsID;
		char   BarCode[24];
		double Quantity;
		int32  Price;
		double Dscnt;
		int32  ExtTextSize;
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int32  CheckCode;
	};
	struct Key1 {
		LDATE  Dt;
		int32  GoodsID;
	};
	struct Key2 {
		int32  CheckID;
	};
	DBField CheckID;
	DBField CheckCode;
	DBField DivID;
	DBField Dt;
	DBField GoodsID;
	DBField BarCode;
	DBField Quantity;
	DBField Price;
	DBField Dscnt;
	DBField ExtTextSize;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CCheckLineTbl : public DBTable {
public:
	CCheckLineTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CheckID;
		int16  RByCheck;
		int16  DivID;
		int32  GoodsID;
		double Quantity;
		int32  Price;
		double Dscnt;
	} data;
	struct Key0 {
		int32  CheckID;
		int16  RByCheck;
	};
	DBField CheckID;
	DBField RByCheck;
	DBField DivID;
	DBField GoodsID;
	DBField Quantity;
	DBField Price;
	DBField Dscnt;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CCheckLineExtTbl : public DBTable {
public:
	CCheckLineExtTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CheckID;
		int16  RByCheck;
		int8   Queue;
		int8   Flags;
		char   Serial[24];
	} data;
	struct Key0 {
		int32  CheckID;
		int16  RByCheck;
	};
	DBField CheckID;
	DBField RByCheck;
	DBField Queue;
	DBField Flags;
	DBField Serial;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CGoodsLineTbl : public DBTable {
public:
	CGoodsLineTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		int16  Sign;
		int16  Flags;
		int32  SessID;
		int32  GoodsID;
		int32  SerialID;
		double Qtty;
		double Rest;
		double Sum;
		int32  AltGoodsID;
		float  AltGoodsQtty;
	} data;
	struct Key0 {
		int32  SessID;
		LDATE  Dt;
		int16  Sign;
		int32  GoodsID;
		int32  SerialID;
	};
	DBField Dt;
	DBField Sign;
	DBField Flags;
	DBField SessID;
	DBField GoodsID;
	DBField SerialID;
	DBField Qtty;
	DBField Rest;
	DBField Sum;
	DBField AltGoodsID;
	DBField AltGoodsQtty;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class DvcLoadingStatTbl : public DBTable {
public:
	DvcLoadingStatTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int16  DvcType;
		int32  DvcID;
		LDATE  Dt;
		LTIME  Tm;
		int32  Cont;
		int16  Status;
		int16  Reserve;
		int32  Flags;
		char   SysData[24];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int16  DvcType;
		int32  DvcID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		LDATE  Dt;
		LTIME  Tm;
		int16  DvcType;
		int32  DvcID;
	};
	DBField ID;
	DBField DvcType;
	DBField DvcID;
	DBField Dt;
	DBField Tm;
	DBField Cont;
	DBField Status;
	DBField Reserve;
	DBField Flags;
	DBField SysData;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class DlsObjTbl : public DBTable {
public:
	DlsObjTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  DlsID;
		int16  ObjType;
		int32  ObjID;
		int32  LVal;
		double Val;
	} data;
	struct Key0 {
		int16  ObjType;
		int32  ObjID;
		int32  DlsID;
	};
	struct Key1 {
		int32  DlsID;
		int16  ObjType;
		int32  ObjID;
	};
	DBField DlsID;
	DBField ObjType;
	DBField ObjID;
	DBField LVal;
	DBField Val;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class QualityCertTbl : public DBTable {
public:
	QualityCertTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int16  Passive;
		int16  Reserve1;
		char   Code[26];
		char   BlankCode[16];
		int32  GoodsID;
		char   GoodsName[40];
		char   Manuf[30];
		LDATE  ProduceDate;
		char   SPrDate[20];
		LDATE  InitDate;
		LDATE  Expiry;
		int32  RegOrgan;
		char   Etc[32];
		uint8  Reserve2[22]; // raw
		char   InnerCode[10];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Code[26];
	};
	struct Key2 {
		LDATE  Expiry;
	};
	struct Key3 {
		int32  RegOrgan;
		LDATE  InitDate;
	};
	struct Key4 {
		int16  Passive;
		char   Code[26];
	};
	DBField ID;
	DBField Passive;
	DBField Reserve1;
	DBField Code;
	DBField BlankCode;
	DBField GoodsID;
	DBField GoodsName;
	DBField Manuf;
	DBField ProduceDate;
	DBField SPrDate;
	DBField InitDate;
	DBField Expiry;
	DBField RegOrgan;
	DBField Etc;
	DBField Reserve2;
	DBField InnerCode;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ArticleTbl : public DBTable {
public:
	ArticleTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  AccSheetID;
		int32  Article;
		int32  ObjID;
		char   Name[128];
		int16  AccessLevel;
		int16  Closed;
		int32  Flags;
		uint8  Reserve2[8]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  AccSheetID;
		int32  Article;
	};
	struct Key2 {
		int32  AccSheetID;
		char   Name[128];
	};
	struct Key3 {
		int32  AccSheetID;
		int32  ObjID;
	};
	DBField ID;
	DBField AccSheetID;
	DBField Article;
	DBField ObjID;
	DBField Name;
	DBField AccessLevel;
	DBField Closed;
	DBField Flags;
	DBField Reserve2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class AcctRelTbl : public DBTable {
public:
	AcctRelTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  AccID;
		int32  ArticleID;
		int32  CurID;
		int16  Ac;
		int16  Sb;
		int32  Ar;
		int16  Kind;
		int16  Closed;
		int32  Flags;
		int32  BankAccID;
		int16  AccessLevel;
		LDATE  FRRL_Date;
		uint8  Reserve[6]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  AccID;
		int32  ArticleID;
	};
	struct Key2 {
		int32  ArticleID;
		int32  AccID;
	};
	struct Key3 {
		int16  Ac;
		int16  Sb;
		int32  Ar;
		int32  CurID;
		int16  Closed;
	};
	DBField ID;
	DBField AccID;
	DBField ArticleID;
	DBField CurID;
	DBField Ac;
	DBField Sb;
	DBField Ar;
	DBField Kind;
	DBField Closed;
	DBField Flags;
	DBField BankAccID;
	DBField AccessLevel;
	DBField FRRL_Date;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class AccTurnTbl : public DBTable {
public:
	AccTurnTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  Acc;
		int32  Bal;
		LDATE  Dt;
		int32  OprNo;
		int32  BillID;
		int16  RByBill;
		int16  Reverse;
		int32  CorrAcc;
		char   Amount[8];  // money[8.2]
		char   Rest[8];    // money[8.2]
	} data;
	struct Key0 {
		int32  BillID;
		int16  Reverse;
		int16  RByBill;
	};
	struct Key1 {
		int32  Acc;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key3 {
		int32  Bal;
		LDATE  Dt;
		int32  OprNo;
	};
	DBField Acc;
	DBField Bal;
	DBField Dt;
	DBField OprNo;
	DBField BillID;
	DBField RByBill;
	DBField Reverse;
	DBField CorrAcc;
	DBField Amount;
	DBField Rest;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BalanceTbl : public DBTable {
public:
	BalanceTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		int32  AccID;
		char   DbtRest[10]; // money[10.2]
		char   CrdRest[10]; // money[10.2]
	} data;
	struct Key0 {
		LDATE  Dt;
		int32  AccID;
	};
	struct Key1 {
		int32  AccID;
		LDATE  Dt;
	};
	DBField Dt;
	DBField AccID;
	DBField DbtRest;
	DBField CrdRest;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BudgetItemTbl : public DBTable {
public:
	BudgetItemTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  BudgetID;
		int32  Acc;
		int32  Flags;
		int32  Kind;
		LDATE  Dt;
		double Amount;
		uint8  Reserve[32]; // raw
		char   Memo[512];  // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  BudgetID;
		int32  Acc;
		int32  Kind;
		LDATE  Dt;
	};
	DBField ID;
	DBField BudgetID;
	DBField Acc;
	DBField Flags;
	DBField Kind;
	DBField Dt;
	DBField Amount;
	DBField Reserve;
	DBField Memo;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class VATBookTbl : public DBTable {
public:
	VATBookTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  Dt;
		char   Code[48];
		LDATE  CBillDt;
		char   CBillCode[48];
		char   TaxOpCode[8];
		int32  LineNo;
		LDATE  InvcDt;
		LDATE  PaymDt;
		LDATE  RcptDt;
		int32  ArID;
		int32  Ar2ID;
		int32  LinkBillID;
		int32  OpID;
		int32  LocID;
		int32  Flags;
		double Amount;
		double Excise;
		double VAT0;
		double Export;
		double VAT1;
		double SVAT1;
		double VAT2;
		double SVAT2;
		double VAT3;
		double SVAT3;
		double VAT4;
		double SVAT4;
		double VAT5;
		double SVAT5;
		int16  LineType_;
		int16  LineSubType;
		int16  Excluded;
		uint8  Reserve2[50]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  LinkBillID;
		int16  LineType_;
		LDATE  Dt;
		int32  LineNo;
		int16  LineSubType;
	};
	struct Key2 {
		LDATE  Dt;
		int32  LineNo;
	};
	struct Key3 {
		int16  LineType_;
		LDATE  Dt;
		int32  LineNo;
		int16  LineSubType;
	};
	struct Key4 {
		int32  ArID;
		LDATE  Dt;
		int32  LineNo;
	};
	struct Key5 {
		int16  LineType_;
		LDATE  PaymDt;
	};
	struct Key6 {
		int32  ArID;
		LDATE  PaymDt;
	};
	DBField ID;
	DBField Dt;
	DBField Code;
	DBField CBillDt;
	DBField CBillCode;
	DBField TaxOpCode;
	DBField LineNo;
	DBField InvcDt;
	DBField PaymDt;
	DBField RcptDt;
	DBField ArID;
	DBField Ar2ID;
	DBField LinkBillID;
	DBField OpID;
	DBField LocID;
	DBField Flags;
	DBField Amount;
	DBField Excise;
	DBField VAT0;
	DBField Export;
	DBField VAT1;
	DBField SVAT1;
	DBField VAT2;
	DBField SVAT2;
	DBField VAT3;
	DBField SVAT3;
	DBField VAT4;
	DBField SVAT4;
	DBField VAT5;
	DBField SVAT5;
	DBField LineType_;
	DBField LineSubType;
	DBField Excluded;
	DBField Reserve2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class MrpTabTbl : public DBTable {
public:
	MrpTabTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ParentID;
		char   Name[48];
		int32  LinkObjType;
		int32  LinkObjID;
		int32  LocID;
		LDATE  Dt;
		int32  Flags;
		uint8  Reserve[16]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  LinkObjType;
		int32  LinkObjID;
		LDATE  Dt;
		int32  LocID;
	};
	struct Key2 {
		LDATE  Dt;
		int32  LocID;
	};
	struct Key3 {
		int32  ParentID;
		int32  LocID;
		LDATE  Dt;
	};
	struct Key4 {
		char   Name[48];
	};
	DBField ID;
	DBField ParentID;
	DBField Name;
	DBField LinkObjType;
	DBField LinkObjID;
	DBField LocID;
	DBField Dt;
	DBField Flags;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class MrpLineTbl : public DBTable {
public:
	MrpLineTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  TabID;
		int32  DestID;
		int32  SrcID;
		double DestReqQtty;
		double SrcReqQtty;
		double DestRest;
		double DestDfct;
		double Cost;
		double Price;
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  TabID;
		int32  DestID;
		int32  SrcID;
	};
	struct Key2 {
		int32  TabID;
		int32  SrcID;
		int32  DestID;
	};
	DBField ID;
	DBField TabID;
	DBField DestID;
	DBField SrcID;
	DBField DestReqQtty;
	DBField SrcReqQtty;
	DBField DestRest;
	DBField DestDfct;
	DBField Cost;
	DBField Price;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SysJournalTbl : public DBTable {
public:
	SysJournalTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int32  Action;
		int32  ObjType;
		int32  ObjID;
		int32  Extra;
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key1 {
		int32  ObjType;
		int32  ObjID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField Action;
	DBField ObjType;
	DBField ObjID;
	DBField Extra;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class SjRsrvTbl : public DBTable {
public:
	SjRsrvTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int32  Action;
		int32  ObjType;
		int32  ObjID;
		int32  Extra;
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField Action;
	DBField ObjType;
	DBField ObjID;
	DBField Extra;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class GtaJournalTbl : public DBTable {
public:
	GtaJournalTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		LTIME  Tm;
		int32  GlobalAccID;
		int32  Op;
		int32  ObjType;
		int32  ObjID;
		int32  Count;
		int32  Duration;
		uint8  Reserve[64]; // raw
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
		int32  GlobalAccID;
	};
	struct Key1 {
		int32  GlobalAccID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int32  Op;
		LDATE  Dt;
		LTIME  Tm;
		int32  GlobalAccID;
	};
	struct Key3 {
		int32  ObjType;
		int32  ObjID;
		LDATE  Dt;
		LTIME  Tm;
		int32  GlobalAccID;
	};
	DBField Dt;
	DBField Tm;
	DBField GlobalAccID;
	DBField Op;
	DBField ObjType;
	DBField ObjID;
	DBField Count;
	DBField Duration;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ObjVerTbl : public DBTable {
public:
	ObjVerTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ObjType;
		int32  ObjID;
		int32  Ver;
		uint32 SysVer;
		int32  Size;
		TSLob <2048> Data;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  ObjType;
		int32  ObjID;
		int32  Ver;
	};
	DBField ID;
	DBField ObjType;
	DBField ObjID;
	DBField Ver;
	DBField SysVer;
	DBField Size;
	DBField Data;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Cr_PosLoadTbl : public DBTable {
public:
	Cr_PosLoadTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		char   Cash_Code[21]; // lstring
		int16  DataType;
		int32  KeyLongint;
		char   KeyString[31]; // lstring
		char   F_MODE[2];  // lstring
		char   F_FIRM_NAME[31]; // lstring
		char   F_ARTIKL[31]; // lstring
		double F_CONTR_COST;
		char   F_CURRENCY[4]; // lstring
		double F_COST;
		char   F_UNIT[6];  // lstring
		char   F_ORIGIN[3]; // lstring
		char   F_GRCODE[10]; // lstring
		char   F_CODE[17]; // lstring
		double F_QUANT;
		char   F_STORE[7]; // lstring
		char   F_BAR_CODE[14]; // lstring
		int16  F_GROOP1;
		int16  F_GROOP2;
		int16  F_GROOP3;
		int16  F_GROOP4;
		int16  F_GROOP5;
		double F_NDSX1;
		double F_NDSX2;
		double F_NDSX3;
		double F_NDSX4;
		double F_NDSX5;
		char   F_SERIA[11]; // lstring
		char   F_BESTB[11]; // lstring
		char   F_ENABLEX[2]; // lstring
		double F_PRESISION;
		char   F_CONTR_CODE[8]; // lstring
		char   F_PARENT[5]; // lstring
		char   F_RAW_MAT[7]; // lstring
		char   F_COLOR[11]; // lstring
		char   F_MODEL[8]; // lstring
		char   F_SORT[4];  // lstring
		char   F_SIZE[12]; // lstring
		LDATE  F_MK_DATA;
		double F_PERCENT;
		double F_EXTRA_SUM;
		LDATE  F_DATE;
		double F_SUM;
		LTIME  F_MK_TIME;
		int32  F_M_COD;
		char   F_S_COD[41]; // lstring
	} data;
	struct Key0 {
		char   Cash_Code[21];
		int16  DataType;
		int32  KeyLongint;
	};
	struct Key1 {
		char   Cash_Code[21];
		int16  DataType;
		char   KeyString[31];
	};
	DBField Cash_Code;
	DBField DataType;
	DBField KeyLongint;
	DBField KeyString;
	DBField F_MODE;
	DBField F_FIRM_NAME;
	DBField F_ARTIKL;
	DBField F_CONTR_COST;
	DBField F_CURRENCY;
	DBField F_COST;
	DBField F_UNIT;
	DBField F_ORIGIN;
	DBField F_GRCODE;
	DBField F_CODE;
	DBField F_QUANT;
	DBField F_STORE;
	DBField F_BAR_CODE;
	DBField F_GROOP1;
	DBField F_GROOP2;
	DBField F_GROOP3;
	DBField F_GROOP4;
	DBField F_GROOP5;
	DBField F_NDSX1;
	DBField F_NDSX2;
	DBField F_NDSX3;
	DBField F_NDSX4;
	DBField F_NDSX5;
	DBField F_SERIA;
	DBField F_BESTB;
	DBField F_ENABLEX;
	DBField F_PRESISION;
	DBField F_CONTR_CODE;
	DBField F_PARENT;
	DBField F_RAW_MAT;
	DBField F_COLOR;
	DBField F_MODEL;
	DBField F_SORT;
	DBField F_SIZE;
	DBField F_MK_DATA;
	DBField F_PERCENT;
	DBField F_EXTRA_SUM;
	DBField F_DATE;
	DBField F_SUM;
	DBField F_MK_TIME;
	DBField F_M_COD;
	DBField F_S_COD;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Cr_CredoPayTbl : public DBTable {
public:
	Cr_CredoPayTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		char   BarCode[23]; // lstring
		LDATE  PayDate;
		LTIME  PayTime;
		int16  PayType;
		double PaySumma;
		double RestSumma;
		int32  CashCode;
		char   DocNumber[11]; // lstring
		LDATE  DocDate;
		int16  ShopIndex;
		int32  DiscCliID;
		int32  Rezerv;
	} data;
	struct Key0 {
		char   BarCode[23];
		LDATE  PayDate;
		LTIME  PayTime;
	};
	struct Key1 {
		int32  CashCode;
		char   DocNumber[11];
		LDATE  PayDate;
		char   BarCode[23];
	};
	struct Key2 {
		int32  DiscCliID;
		LDATE  DocDate;
		char   DocNumber[11];
		int16  PayType;
	};
	DBField BarCode;
	DBField PayDate;
	DBField PayTime;
	DBField PayType;
	DBField PaySumma;
	DBField RestSumma;
	DBField CashCode;
	DBField DocNumber;
	DBField DocDate;
	DBField ShopIndex;
	DBField DiscCliID;
	DBField Rezerv;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Cr_ZReportTbl : public DBTable {
public:
	Cr_ZReportTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CashNumber;
		int32  ZNumber;
		double ZSale;
		double ZReturn;
		double ZDiscount;
		LDATE  ZDate;
		LTIME  ZTime;
		double ZCrSale;
		double ZCrReturn;
		double ZCrDiscount;
		double TSale;
		double TReturn;
		double CrSale;
		double CrReturn;
		double CurMoney;
	} data;
	struct Key0 {
		int32  CashNumber;
		int32  ZNumber;
	};
	struct Key1 {
		int32  CashNumber;
		LDATE  ZDate;
	};
	DBField CashNumber;
	DBField ZNumber;
	DBField ZSale;
	DBField ZReturn;
	DBField ZDiscount;
	DBField ZDate;
	DBField ZTime;
	DBField ZCrSale;
	DBField ZCrReturn;
	DBField ZCrDiscount;
	DBField TSale;
	DBField TReturn;
	DBField CrSale;
	DBField CrReturn;
	DBField CurMoney;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Cr_SaleTbl : public DBTable {
public:
	Cr_SaleTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		double Quant;
		char   Operation[2]; // lstring
		LDATE  DateOperation;
		double Price;
		char   Store[7];   // lstring
		int32  Ck_Number;
		double Ck_Curs;
		char   Ck_CurAbr[4]; // lstring
		double Ck_Disg;
		double Ck_Disc;
		double Quant_S;
		int16  GrCode;
		int32  Code;
		char   Cassir[11]; // lstring
		int32  Cash_Code;
		int32  Ck_Card;
		char   Contr_Code[8]; // lstring
		double Contr_Cost;
		char   Seria[11];  // lstring
		char   BestB[11];  // lstring
		double NDSx1;
		double NDSx2;
		LTIME  Times;
		double Summa;
		double SumNDS;
		double SumNSP;
		double PriceNSP;
		int32  NSmena;
	} data;
	struct Key0 {
		LDATE  DateOperation;
		int16  GrCode;
		int32  Cash_Code;
		int32  Ck_Number;
	};
	struct Key1 {
		int16  GrCode;
		LDATE  DateOperation;
		int32  Cash_Code;
		int32  Ck_Number;
	};
	struct Key2 {
		int32  Cash_Code;
		int32  Ck_Number;
		int16  GrCode;
		int32  Code;
		double Price;
	};
	struct Key3 {
		LDATE  DateOperation;
		int32  Cash_Code;
		int32  Ck_Number;
	};
	struct Key4 {
		LDATE  DateOperation;
		char   Cassir[11];
		int32  Cash_Code;
		int32  Ck_Number;
	};
	struct Key5 {
		char   Cassir[11];
		LDATE  DateOperation;
		int32  Cash_Code;
		int32  Ck_Number;
	};
	struct Key6 {
		LDATE  DateOperation;
		int16  GrCode;
		int32  Code;
		double Price;
	};
	struct Key7 {
		int32  Code;
		LDATE  DateOperation;
	};
	struct Key8 {
		int32  Cash_Code;
		int32  NSmena;
	};
	DBField Quant;
	DBField Operation;
	DBField DateOperation;
	DBField Price;
	DBField Store;
	DBField Ck_Number;
	DBField Ck_Curs;
	DBField Ck_CurAbr;
	DBField Ck_Disg;
	DBField Ck_Disc;
	DBField Quant_S;
	DBField GrCode;
	DBField Code;
	DBField Cassir;
	DBField Cash_Code;
	DBField Ck_Card;
	DBField Contr_Code;
	DBField Contr_Cost;
	DBField Seria;
	DBField BestB;
	DBField NDSx1;
	DBField NDSx2;
	DBField Times;
	DBField Summa;
	DBField SumNDS;
	DBField SumNSP;
	DBField PriceNSP;
	DBField NSmena;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Cr_CashAuthTbl : public DBTable {
public:
	Cr_CashAuthTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int16  ShopIndex;
		int16  CashNumber;
		int16  ZNumber;
		int32  CheckNumber;
		int16  ID;
		char   CardNumber[20]; // lstring
		char   AuthCode[10]; // lstring
		char   Casher[11]; // lstring
		LDATE  DateSale;
		LTIME  TimeSale;
		int16  Depart;
		int32  Tovar;
		double Price;
		double Summa;
	} data;
	struct Key0 {
		int16  ShopIndex;
		int16  CashNumber;
		int16  ZNumber;
		int32  CheckNumber;
		int16  ID;
	};
	DBField ShopIndex;
	DBField CashNumber;
	DBField ZNumber;
	DBField CheckNumber;
	DBField ID;
	DBField CardNumber;
	DBField AuthCode;
	DBField Casher;
	DBField DateSale;
	DBField TimeSale;
	DBField Depart;
	DBField Tovar;
	DBField Price;
	DBField Summa;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Cr_CashDCrdTbl : public DBTable {
public:
	Cr_CashDCrdTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int16  ShopIndex;
		int16  CashNumber;
		int16  ZNumber;
		int32  CheckNumber;
		int16  CardType;
		char   CardNumber[23]; // lstring
		double DiscountRub;
		double DiscountCur;
		char   Casher[11]; // lstring
		LDATE  DateSale;
		LTIME  TimeSale;
	} data;
	struct Key0 {
		int16  ShopIndex;
		int16  CashNumber;
		int16  ZNumber;
		int32  CheckNumber;
		int16  CardType;
		char   CardNumber[23];
	};
	struct Key1 {
		int16  CardType;
		char   CardNumber[23];
	};
	struct Key2 {
		LDATE  DateSale;
		int16  CardType;
		char   CardNumber[23];
	};
	DBField ShopIndex;
	DBField CashNumber;
	DBField ZNumber;
	DBField CheckNumber;
	DBField CardType;
	DBField CardNumber;
	DBField DiscountRub;
	DBField DiscountCur;
	DBField Casher;
	DBField DateSale;
	DBField TimeSale;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class PredictSalesTbl : public DBTable {
public:
	PredictSalesTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		int16  Loc;
		int16  Dt;
		int16  RType;
		int16  Flags;
		float  Quantity;
		float  Amount;
	} data;
	struct Key0 {
		int16  RType;
		int16  Loc;
		int32  GoodsID;
		int16  Dt;
	};
	DBField GoodsID;
	DBField Loc;
	DBField Dt;
	DBField RType;
	DBField Flags;
	DBField Quantity;
	DBField Amount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class GoodsStatTbl : public DBTable {
public:
	GoodsStatTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int16  Loc;
		int16  LastDate;
		int32  GoodsID;
		float  QttySum;
		float  QttySqSum;
		float  AmtSum;
		float  AmtSqSum;
		int16  Count;
		uint8  Reserve2[10]; // raw
	} data;
	struct Key0 {
		int16  Loc;
		int32  GoodsID;
	};
	struct Key1 {
		int32  GoodsID;
		int16  Loc;
	};
	DBField Loc;
	DBField LastDate;
	DBField GoodsID;
	DBField QttySum;
	DBField QttySqSum;
	DBField AmtSum;
	DBField AmtSqSum;
	DBField Count;
	DBField Reserve2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class ProcessorTbl : public DBTable {
public:
	ProcessorTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ParentID;
		int32  Kind;
		char   Name[48];
		int32  LocID;
		int32  TimeUnitID;
		int32  Flags;
		int32  LinkObjType;
		int32  LinkObjID;
		int32  WrOffOpID;
		int32  WrOffArID;
		int32  SuperSessTiming;
		int32  RestAltGrpID;
		int32  PrinterID;
		int16  LabelCount;
		char   Code[10];
		int32  WrOffGenOpID;
		char   SrvJobSymb[20];
		int32  CipPersonKindID;
		int16  CipMax;
		int16  TcbQuant;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  Kind;
		int32  ParentID;
		char   Name[48];
	};
	struct Key2 {
		int32  Kind;
		char   Name[48];
	};
	DBField ID;
	DBField ParentID;
	DBField Kind;
	DBField Name;
	DBField LocID;
	DBField TimeUnitID;
	DBField Flags;
	DBField LinkObjType;
	DBField LinkObjID;
	DBField WrOffOpID;
	DBField WrOffArID;
	DBField SuperSessTiming;
	DBField RestAltGrpID;
	DBField PrinterID;
	DBField LabelCount;
	DBField Code;
	DBField WrOffGenOpID;
	DBField SrvJobSymb;
	DBField CipPersonKindID;
	DBField CipMax;
	DBField TcbQuant;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TechTbl : public DBTable {
public:
	TechTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Code[48];
		int32  PrcID;
		int32  GoodsID;
		int32  GStrucID;
		int32  Flags;
		int16  Sign;
		int16  Kind;
		int32  PrevGoodsID;
		int32  Duration;
		double Cost;
		double Capacity;
		double Rounding;
		int32  TransClsID;
		int32  TransMask;
		float  InitQtty;
		int32  ParentID;
		int32  OrderN;
		int16  CipMax;
		uint8  Reserve3[10]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Code[48];
	};
	struct Key2 {
		int32  PrcID;
		int32  GoodsID;
		int32  GStrucID;
	};
	struct Key3 {
		int32  GoodsID;
		int32  GStrucID;
		int32  PrcID;
	};
	struct Key4 {
		int32  GStrucID;
		int32  GoodsID;
		int32  PrcID;
	};
	struct Key5 {
		int32  ParentID;
		int32  OrderN;
	};
	DBField ID;
	DBField Code;
	DBField PrcID;
	DBField GoodsID;
	DBField GStrucID;
	DBField Flags;
	DBField Sign;
	DBField Kind;
	DBField PrevGoodsID;
	DBField Duration;
	DBField Cost;
	DBField Capacity;
	DBField Rounding;
	DBField TransClsID;
	DBField TransMask;
	DBField InitQtty;
	DBField ParentID;
	DBField OrderN;
	DBField CipMax;
	DBField Reserve3;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TSessionTbl : public DBTable {
public:
	TSessionTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ParentID;
		int32  Num;
		int32  TechID;
		int32  PrcID;
		LDATE  StDt;
		LTIME  StTm;
		LDATE  FinDt;
		LTIME  FinTm;
		int16  Incomplete;
		int16  Status;
		int32  Flags;
		int32  ArID;
		int32  Ar2ID;
		int32  PlannedTiming;
		double PlannedQtty;
		double ActQtty;
		int32  OrderLotID;
		int32  PrevSessID;
		double Amount;
		int32  LinkBillID;
		int32  SCardID;
		int32  ToolingTime;
		int32  CCheckID_;
		uint8  Repeating[8]; // raw
		int32  RepBaseID;
		uint8  Reserve[16]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  PrcID;
		int32  Num;
	};
	struct Key2 {
		LDATE  StDt;
		LTIME  StTm;
	};
	struct Key3 {
		LDATE  FinDt;
		LTIME  FinTm;
	};
	struct Key4 {
		int32  PrcID;
		LDATE  StDt;
		LTIME  StTm;
	};
	struct Key5 {
		int32  TechID;
		LDATE  StDt;
		LTIME  StTm;
	};
	struct Key6 {
		int32  ParentID;
		int32  PrcID;
		int32  Num;
	};
	struct Key7 {
		int32  OrderLotID;
		int32  PrcID;
		int32  Num;
	};
	struct Key8 {
		int32  PrevSessID;
		int32  PrcID;
		int32  Num;
	};
	DBField ID;
	DBField ParentID;
	DBField Num;
	DBField TechID;
	DBField PrcID;
	DBField StDt;
	DBField StTm;
	DBField FinDt;
	DBField FinTm;
	DBField Incomplete;
	DBField Status;
	DBField Flags;
	DBField ArID;
	DBField Ar2ID;
	DBField PlannedTiming;
	DBField PlannedQtty;
	DBField ActQtty;
	DBField OrderLotID;
	DBField PrevSessID;
	DBField Amount;
	DBField LinkBillID;
	DBField SCardID;
	DBField ToolingTime;
	DBField CCheckID_;
	DBField Repeating;
	DBField RepBaseID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TSessLineTbl : public DBTable {
public:
	TSessLineTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  TSessID;
		int32  OprNo;
		int32  GoodsID;
		int32  LotID;
		int32  UserID;
		int16  Sign;
		int16  Reserve;
		LDATE  Dt;
		LTIME  Tm;
		int32  Flags;
		double Qtty;
		char   Serial[24];
		double Price;
		double WtQtty;
		LDATE  Expiry;
		double Discount;
		double LotDimX;
		double LotDimY;
		double LotDimZ;
		double OrgQtty;
	} data;
	struct Key0 {
		int32  TSessID;
		int32  OprNo;
	};
	struct Key1 {
		int32  TSessID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int32  GoodsID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		char   Serial[24];
		int16  Sign;
	};
	DBField TSessID;
	DBField OprNo;
	DBField GoodsID;
	DBField LotID;
	DBField UserID;
	DBField Sign;
	DBField Reserve;
	DBField Dt;
	DBField Tm;
	DBField Flags;
	DBField Qtty;
	DBField Serial;
	DBField Price;
	DBField WtQtty;
	DBField Expiry;
	DBField Discount;
	DBField LotDimX;
	DBField LotDimY;
	DBField LotDimZ;
	DBField OrgQtty;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BizScoreTbl : public DBTable {
public:
	BizScoreTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  ActualDate;
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int32  ScoreID;
		int32  ObjType;
		int32  ObjID;
		double Val;
		int32  Flags;
		uint8  Reserve[12]; // raw
		char   Str[252];   // note
	} data;
	struct Key0 {
		LDATE  ActualDate;
		int32  ScoreID;
		int32  ObjID;
	};
	struct Key1 {
		int32  ScoreID;
		LDATE  ActualDate;
		int32  ObjID;
	};
	struct Key2 {
		int32  UserID;
		LDATE  ActualDate;
		int32  ScoreID;
		int32  ObjID;
	};
	struct Key3 {
		LDATE  Dt;
		LTIME  Tm;
		int32  ScoreID;
	};
	DBField ActualDate;
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField ScoreID;
	DBField ObjType;
	DBField ObjID;
	DBField Val;
	DBField Flags;
	DBField Reserve;
	DBField Str;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class GlobalBizScoreTbl : public DBTable {
public:
	GlobalBizScoreTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  UpdCounter;
		LDATE  ActualDate;
		LDATE  Dt;
		LTIME  Tm;
		int32  GlobalUserID;
		int32  LocalScoreID;
		double Val;
		int32  Flags;
		uint8  Reserve[12]; // raw
		char   ScoreName[48];
		char   ScoreDescr[252];
		char   Str[252];   // note
	} data;
	struct Key0 {
		LDATE  ActualDate;
		int32  GlobalUserID;
		int32  LocalScoreID;
	};
	struct Key1 {
		int32  GlobalUserID;
		LDATE  ActualDate;
		int32  LocalScoreID;
	};
	struct Key2 {
		int32  UpdCounter;
		int32  GlobalUserID;
		LDATE  ActualDate;
		int32  LocalScoreID;
	};
	DBField UpdCounter;
	DBField ActualDate;
	DBField Dt;
	DBField Tm;
	DBField GlobalUserID;
	DBField LocalScoreID;
	DBField Val;
	DBField Flags;
	DBField Reserve;
	DBField ScoreName;
	DBField ScoreDescr;
	DBField Str;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BizScore2Tbl : public DBTable {
public:
	BizScore2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int16  Kind;
		uint16 Reserve2;
		int32  ScoreID;
		int32  ArID;
		LDATE  Dt;
		LTIME  Tm;
		LDATE  PlanPeriodFn;
		int32  Flags;
		int32  AgentID;
		int32  LinkObjID;
		int32  IntVal;
		double RealVal;
		uint8  Reserve[64]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int16  Kind;
		LDATE  Dt;
		LTIME  Tm;
		int32  ScoreID;
	};
	struct Key2 {
		int16  Kind;
		int32  ScoreID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField Kind;
	DBField Reserve2;
	DBField ScoreID;
	DBField ArID;
	DBField Dt;
	DBField Tm;
	DBField PlanPeriodFn;
	DBField Flags;
	DBField AgentID;
	DBField LinkObjID;
	DBField IntVal;
	DBField RealVal;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class DebtStatTbl : public DBTable {
public:
	DebtStatTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  AccSheetID;
		int32  ArID;
		LDATE  Dt;
		LTIME  Tm;
		int32  Flags;
		double DelayMean;
		double DelaySd;
		double DelayTestGamma;
		double DelayTestChSq;
		int32  PaymPeriod;
		double PaymDensity;
		char   Rating[12];
		double CreditLimit;
		double DebtCost;
		double ExpiryMean;
		double SigmFactor;
		int16  LimitTerm;
		int16  Pad;
		int32  RelArID;
		uint8  Reserve[24]; // raw
	} data;
	struct Key0 {
		LDATE  Dt;
		int32  AccSheetID;
		int32  ArID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  AccSheetID;
		int32  RelArID;
		int32  ArID;
	};
	DBField AccSheetID;
	DBField ArID;
	DBField Dt;
	DBField Tm;
	DBField Flags;
	DBField DelayMean;
	DBField DelaySd;
	DBField DelayTestGamma;
	DBField DelayTestChSq;
	DBField PaymPeriod;
	DBField PaymDensity;
	DBField Rating;
	DBField CreditLimit;
	DBField DebtCost;
	DBField ExpiryMean;
	DBField SigmFactor;
	DBField LimitTerm;
	DBField Pad;
	DBField RelArID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CheckOpJrnlTbl : public DBTable {
public:
	CheckOpJrnlTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		LTIME  Tm;
		int32  UserID;
		int16  Action;
		int16  PrinterID;
		int32  CheckID;
		int32  CheckNum;
		float  Summ;
		float  Price;
		int32  GoodsID;
		int32  AgentID;
		int32  PosNodeID;
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField Dt;
	DBField Tm;
	DBField UserID;
	DBField Action;
	DBField PrinterID;
	DBField CheckID;
	DBField CheckNum;
	DBField Summ;
	DBField Price;
	DBField GoodsID;
	DBField AgentID;
	DBField PosNodeID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class UserFuncPrfSessTbl : public DBTable {
public:
	UserFuncPrfSessTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   DbUUID_s[40];
		char   SessUUID_s[40];
		int32  ThreadId;
		LDATE  Dt;
		LTIME  Tm;
		int32  Ver;
		int32  Flags;
		uint8  MACAdr[8];  // raw
		char   DbName[48];
		char   UserName[48];
		char   MachineName[48];
		uint8  Reserve[48]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   SessUUID_s[40];
		int32  ThreadId;
	};
	struct Key2 {
		char   DbUUID_s[40];
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField DbUUID_s;
	DBField SessUUID_s;
	DBField ThreadId;
	DBField Dt;
	DBField Tm;
	DBField Ver;
	DBField Flags;
	DBField MACAdr;
	DBField DbName;
	DBField UserName;
	DBField MachineName;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class UserFuncPrfTbl : public DBTable {
public:
	UserFuncPrfTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  SessID;
		int64  SeqID;
		int32  FuncID;
		LDATE  Dt;
		LTIME  Tm;
		int64  Clock;
		int32  Flags;
		double Factor1;
		double Factor2;
		double Factor3;
		int64  ElemCount;
		double QuadSum1;
		double QuadSum2;
		double QuadSum3;
		double QuadClockSum;
		uint8  Reserve[8]; // raw
	} data;
	struct Key0 {
		int32  SessID;
		int64  SeqID;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
		int32  SessID;
		int64  SeqID;
	};
	struct Key2 {
		int32  FuncID;
		LDATE  Dt;
		LTIME  Tm;
		int32  SessID;
		int64  SeqID;
	};
	DBField SessID;
	DBField SeqID;
	DBField FuncID;
	DBField Dt;
	DBField Tm;
	DBField Clock;
	DBField Flags;
	DBField Factor1;
	DBField Factor2;
	DBField Factor3;
	DBField ElemCount;
	DBField QuadSum1;
	DBField QuadSum2;
	DBField QuadSum3;
	DBField QuadClockSum;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class EventTbl : public DBTable {
public:
	EventTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  Dt;
		LTIME  Tm;
		int32  EventType;
		int32  Status;
		int32  UserID;
		int32  GlobalUserID;
		int32  ObjType;
		int32  ObjID;
		int32  Flags;
		int32  EvSubscrID;
		uint8  Reserve[28]; // raw
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int32  EventType;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		int32  UserID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key4 {
		int32  GlobalUserID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key5 {
		int32  ObjType;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField Dt;
	DBField Tm;
	DBField EventType;
	DBField Status;
	DBField UserID;
	DBField GlobalUserID;
	DBField ObjType;
	DBField ObjID;
	DBField Flags;
	DBField EvSubscrID;
	DBField Reserve;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class StyloQSecTbl : public DBTable {
public:
	StyloQSecTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Kind;
		int32  CorrespondID;
		uint8  BI[20];     // raw
		LDATETIME Expiration;
		int32  LinkObjType;
		int32  LinkObjID;
		int32  DocType;
		int64  TimeStamp;
		int32  Flags;
		int64  Counter;
		uint8  Reserve[92]; // raw
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  Kind;
		uint8  BI[20];
		int64  TimeStamp;
	};
	struct Key2 {
		int32  CorrespondID;
		uint8  BI[20];
	};
	struct Key3 {
		int32  DocType;
		uint8  BI[20];
		int64  TimeStamp;
	};
	DBField ID;
	DBField Kind;
	DBField CorrespondID;
	DBField BI;
	DBField Expiration;
	DBField LinkObjType;
	DBField LinkObjID;
	DBField DocType;
	DBField TimeStamp;
	DBField Flags;
	DBField Counter;
	DBField Reserve;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class StyloQSettlementTbl : public DBTable {
public:
	StyloQSettlementTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		uint8  Uid[16];    // raw
		uint8  OtherBI[20]; // raw
		int64  Amt;
		int64  Rst;
		int64  Tmstmp;
		uint8  Hsh[20];    // raw
		uint8  BckHsh[20]; // raw
		uint8  Reserve[128]; // raw
		TSLob <2048> VT;
	} data;
	struct Key0 {
		uint8  Uid[16];
	};
	struct Key1 {
		int64  Tmstmp;
	};
	struct Key2 {
		uint8  OtherBI[20];
		int64  Tmstmp;
	};
	DBField Uid;
	DBField OtherBI;
	DBField Amt;
	DBField Rst;
	DBField Tmstmp;
	DBField Hsh;
	DBField BckHsh;
	DBField Reserve;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TsTaJournalTbl : public DBTable {
public:
	TsTaJournalTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		LDATE  NotifyDt;
		LTIME  NotifyTm;
		uint32 Deal;
		uint32 Ord;
		int32  TsID;
		int8   Symb[32];
		int32  TaType;
		int32  OrdType;
		int32  OrdState;
		int32  DealType;
		int32  OrdTypeTime;
		LDATETIME Expiration;
		double Price;
		double PriceTrigger;
		double PriceSL;
		double PriceTP;
		double Volume;
		uint32 Position;
		uint32 PositionBy;
		TSLob <2048> VT;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  NotifyDt;
		LTIME  NotifyTm;
	};
	struct Key2 {
		int32  TsID;
		LDATE  NotifyDt;
		LTIME  NotifyTm;
	};
	struct Key3 {
		int8   Symb[32];
		LDATE  NotifyDt;
		LTIME  NotifyTm;
	};
	struct Key4 {
		int32  TaType;
		LDATE  NotifyDt;
		LTIME  NotifyTm;
	};
	DBField ID;
	DBField NotifyDt;
	DBField NotifyTm;
	DBField Deal;
	DBField Ord;
	DBField TsID;
	DBField Symb;
	DBField TaType;
	DBField OrdType;
	DBField OrdState;
	DBField DealType;
	DBField OrdTypeTime;
	DBField Expiration;
	DBField Price;
	DBField PriceTrigger;
	DBField PriceSL;
	DBField PriceTP;
	DBField Volume;
	DBField Position;
	DBField PositionBy;
	DBField VT;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Reference_ObsoleteTbl : public DBTable {
public:
	Reference_ObsoleteTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjType;
		int32  ObjID;
		char   ObjName[48];
		char   AltText[20];
		int32  Flags;
		int32  Val1;
		int32  Val2;
	} data;
	struct Key0 {
		int32  ObjType;
		int32  ObjID;
	};
	struct Key1 {
		int32  ObjType;
		char   ObjName[48];
	};
	struct Key2 {
		int32  ObjType;
		int32  Val1;
	};
	struct Key3 {
		int32  ObjType;
		int32  Val2;
	};
	DBField ObjType;
	DBField ObjID;
	DBField ObjName;
	DBField AltText;
	DBField Flags;
	DBField Val1;
	DBField Val2;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Country_ObsoleteTbl : public DBTable {
public:
	Country_ObsoleteTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[30];
		char   Abbr[10];
		int32  Capital;
		char   Phone[10];
		int16  HasRegions;
		uint8  Reserve[16]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Name[30];
	};
	struct Key2 {
		char   Abbr[10];
	};
	DBField ID;
	DBField Name;
	DBField Abbr;
	DBField Capital;
	DBField Phone;
	DBField HasRegions;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Region_ObsoleteTbl : public DBTable {
public:
	Region_ObsoleteTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Country;
		char   Name[30];
		char   Abbr[10];
		int32  Capital;
		char   Phone[10];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  Country;
		char   Name[30];
	};
	struct Key2 {
		char   Name[30];
	};
	struct Key3 {
		char   Abbr[10];
	};
	DBField ID;
	DBField Country;
	DBField Name;
	DBField Abbr;
	DBField Capital;
	DBField Phone;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class City_ObsoleteTbl : public DBTable {
public:
	City_ObsoleteTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Country;
		int32  Region;
		char   Name[30];
		char   Abbr[10];
		int32  Status;
		char   Phone[10];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  Region;
		char   Name[30];
	};
	struct Key2 {
		int32  Country;
		char   Name[30];
	};
	struct Key3 {
		char   Name[30];
		int32  Region;
	};
	struct Key4 {
		char   Abbr[10];
		int32  Region;
	};
	DBField ID;
	DBField Country;
	DBField Region;
	DBField Name;
	DBField Abbr;
	DBField Status;
	DBField Phone;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class BankAccount_Pre9004Tbl : public DBTable {
public:
	BankAccount_Pre9004Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  PersonID;
		int32  BankID;
		int32  AccType;
		char   Acct[32];
		LDATE  OpenDate;
		int32  Flags;
		int32  CorrAcc;
		int32  CorrArt;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  PersonID;
		int32  BankID;
		char   Acct[32];
	};
	DBField ID;
	DBField PersonID;
	DBField BankID;
	DBField AccType;
	DBField Acct;
	DBField OpenDate;
	DBField Flags;
	DBField CorrAcc;
	DBField CorrArt;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class StaffList_Pre9003Tbl : public DBTable {
public:
	StaffList_Pre9003Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  OrgID;
		int32  DivisionID;
		char   Name[48];
		int32  Rank;
		int32  Flags;
		int16  VacancyCount;
		int16  VacancyBusy;
		char   Salary[8];  // money[8.2]
		int32  FixedStaff;
		int32  ChargeGrpID;
		uint8  Reserve[24]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  OrgID;
		int32  DivisionID;
		char   Name[48];
	};
	struct Key2 {
		int32  OrgID;
		int32  DivisionID;
		int32  Rank;
		char   Name[48];
	};
	DBField ID;
	DBField OrgID;
	DBField DivisionID;
	DBField Name;
	DBField Rank;
	DBField Flags;
	DBField VacancyCount;
	DBField VacancyBusy;
	DBField Salary;
	DBField FixedStaff;
	DBField ChargeGrpID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class HistGoodsTbl : public DBTable {
public:
	HistGoodsTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  GoodsID;
		int32  Ver;
		int32  Sz;
		TSLob <2048> Data;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  GoodsID;
		int32  Ver;
	};
	DBField ID;
	DBField GoodsID;
	DBField Ver;
	DBField Sz;
	DBField Data;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class HistBillTbl : public DBTable {
public:
	HistBillTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  InnerID;
		int32  BillID;
		int32  Ver;
		char   Code[24];
		LDATE  Dt;
		int32  OpID;
		int32  LocID;
		int32  Object;
		int32  Object2;
		int32  CurID;
		double CRate;
		double Amount;
		int32  LinkBillID;
		int32  Flags;
		int32  SCardID;
		int32  PayerID;
		int32  AgentID;
		uint8  Reserve[16]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  BillID;
		int32  InnerID;
		int32  Ver;
	};
	DBField ID;
	DBField InnerID;
	DBField BillID;
	DBField Ver;
	DBField Code;
	DBField Dt;
	DBField OpID;
	DBField LocID;
	DBField Object;
	DBField Object2;
	DBField CurID;
	DBField CRate;
	DBField Amount;
	DBField LinkBillID;
	DBField Flags;
	DBField SCardID;
	DBField PayerID;
	DBField AgentID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class HistTrfrTbl : public DBTable {
public:
	HistTrfrTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  HistBillID;
		int32  OprNo;
		int32  GoodsID;
		double Quantity;
		double Cost;
		double Price;
		double Discount;
		int32  QCertID;
		LDATE  Expiry;
		int32  Flags;
	} data;
	struct Key0 {
		int32  HistBillID;
		int32  OprNo;
	};
	DBField HistBillID;
	DBField OprNo;
	DBField GoodsID;
	DBField Quantity;
	DBField Cost;
	DBField Price;
	DBField Discount;
	DBField QCertID;
	DBField Expiry;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class CCurPriceTbl : public DBTable {
public:
	CCurPriceTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  CashID;
		int32  GoodsID;
		char   Price[8];   // money[8.2]
	} data;
	struct Key0 {
		int32  CashID;
		int32  GoodsID;
	};
	DBField CashID;
	DBField GoodsID;
	DBField Price;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class Account_Pre9004Tbl : public DBTable {
public:
	Account_Pre9004Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int16  Ac;
		int16  Sb;
		char   Code[32];
		int32  CurID;
		char   Name[48];
		int32  AccSheetID;
		LDATE  OpenDate;
		int16  Type;
		int16  Kind;
		int32  Flags;
		double SaldoLimit;
		double Overdraft;
		LDATE  FRRL_Date;
		int32  ParentID;
		uint8  Reserve[12]; // raw
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int16  Ac;
		int16  Sb;
		int32  CurID;
	};
	struct Key2 {
		char   Code[32];
		int16  Ac;
		int16  Sb;
		int32  CurID;
	};
	DBField ID;
	DBField Ac;
	DBField Sb;
	DBField Code;
	DBField CurID;
	DBField Name;
	DBField AccSheetID;
	DBField OpenDate;
	DBField Type;
	DBField Kind;
	DBField Flags;
	DBField SaldoLimit;
	DBField Overdraft;
	DBField FRRL_Date;
	DBField ParentID;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempTSessRepTbl : public DBTable {
public:
	TempTSessRepTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  DtVal;
		int32  PrcID;
		int32  PrmrGoodsID;
		int16  NotPrmrLine;
		int16  PlanPhUnit;
		int32  GoodsID;
		char   PrmrGoodsName[64];
		char   GoodsName[64];
		char   PrcName[48];
		char   DtText[48];
		double InQtty;
		double OutQtty;
		double PlanInQtty;
		double PlanOutQtty;
		double PlanDev;
		double OutRest;
		double InCompPart;
		double OutCompPart;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		int32  DtVal;
		int32  PrcID;
		int32  PrmrGoodsID;
		int16  NotPrmrLine;
		int32  GoodsID;
	};
	struct Key2 {
		int32  DtVal;
		int32  PrmrGoodsID;
		int16  NotPrmrLine;
		int32  GoodsID;
		int32  PrcID;
	};
	struct Key3 {
		int32  DtVal;
		int32  PrcID;
		char   PrmrGoodsName[64];
		int16  NotPrmrLine;
		char   GoodsName[64];
	};
	DBField ID__;
	DBField DtVal;
	DBField PrcID;
	DBField PrmrGoodsID;
	DBField NotPrmrLine;
	DBField PlanPhUnit;
	DBField GoodsID;
	DBField PrmrGoodsName;
	DBField GoodsName;
	DBField PrcName;
	DBField DtText;
	DBField InQtty;
	DBField OutQtty;
	DBField PlanInQtty;
	DBField PlanOutQtty;
	DBField PlanDev;
	DBField OutRest;
	DBField InCompPart;
	DBField OutCompPart;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPrcBusyTbl : public DBTable {
public:
	TempPrcBusyTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  PrcID;
		LDATE  StDt;
		LTIME  StTm;
		LDATE  FnDt;
		LTIME  FnTm;
		int32  Duration;
		int32  TSessID;
		char   TxtPeriod[48];
		char   TxtDuration[16];
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		int32  PrcID;
		LDATE  StDt;
		LTIME  StTm;
	};
	struct Key2 {
		LDATE  StDt;
		LTIME  StTm;
		LDATE  FnDt;
		LTIME  FnTm;
	};
	DBField ID__;
	DBField PrcID;
	DBField StDt;
	DBField StTm;
	DBField FnDt;
	DBField FnTm;
	DBField Duration;
	DBField TSessID;
	DBField TxtPeriod;
	DBField TxtDuration;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPredictSalesTbl : public DBTable {
public:
	TempPredictSalesTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		double Qtty;
		double Amt;
		double QttyPredict;
		double QttyAbsErr;
		double QttyPctErr;
		double AmtPredict;
		double AmtAbsErr;
		double AmtPctErr;
		int32  Flags;
	} data;
	struct Key0 {
		LDATE  Dt;
	};
	DBField Dt;
	DBField Qtty;
	DBField Amt;
	DBField QttyPredict;
	DBField QttyAbsErr;
	DBField QttyPctErr;
	DBField AmtPredict;
	DBField AmtAbsErr;
	DBField AmtPctErr;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsStatTbl : public DBTable {
public:
	TempGoodsStatTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		LDATE  Dt;
		char   GoodsName[128];
		LDATE  Beg;
		LDATE  End;
		int32  Count;
		double QttyAvg;
		double QttySigma;
		double QttyVar;
		double QttyTrnovr;
		double AmtAvg;
		double AmtSigma;
		double AmtVar;
		double AmtTrnovr;
		double PriceAvg;
		double MinStock;
	} data;
	struct Key0 {
		int32  GoodsID;
		LDATE  Dt;
	};
	struct Key1 {
		char   GoodsName[128];
		LDATE  Dt;
	};
	DBField GoodsID;
	DBField Dt;
	DBField GoodsName;
	DBField Beg;
	DBField End;
	DBField Count;
	DBField QttyAvg;
	DBField QttySigma;
	DBField QttyVar;
	DBField QttyTrnovr;
	DBField AmtAvg;
	DBField AmtSigma;
	DBField AmtVar;
	DBField AmtTrnovr;
	DBField PriceAvg;
	DBField MinStock;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsRestTbl : public DBTable {
public:
	TempGoodsRestTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  GoodsID;
		int32  GoodsGrp;
		char   GoodsName[128];
		int32  LocID;
		int32  LotID;
		int32  UnitID;
		int32  PhUnitID;
		double UnitPerPack;
		double Quantity;
		double Ord;
		double PhQtty;
		double SStatSales;
		double Cost;
		double Price;
		double SumCost;
		double SumPrice;
		double SumCVat;
		double SumPVat;
		uint32 BarcodeSP;
		uint32 SerialSP;
		int32  Predict;
		int32  RestInDays;
		double MinStock;
		double SupplOrder;
		double Deficit;
		double QttyWithDeficit;
		double DraftRcpt;
		int32  SubstAsscCount;
		LDATE  Expiry;
		LDATE  LastSellDate;
		int16  IsPredictTrust;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		char   GoodsName[128];
		int32  LocID;
	};
	struct Key2 {
		int32  GoodsGrp;
		char   GoodsName[128];
		int32  LocID;
	};
	struct Key3 {
		int32  GoodsID;
		int32  LocID;
	};
	DBField ID__;
	DBField GoodsID;
	DBField GoodsGrp;
	DBField GoodsName;
	DBField LocID;
	DBField LotID;
	DBField UnitID;
	DBField PhUnitID;
	DBField UnitPerPack;
	DBField Quantity;
	DBField Ord;
	DBField PhQtty;
	DBField SStatSales;
	DBField Cost;
	DBField Price;
	DBField SumCost;
	DBField SumPrice;
	DBField SumCVat;
	DBField SumPVat;
	DBField BarcodeSP;
	DBField SerialSP;
	DBField Predict;
	DBField RestInDays;
	DBField MinStock;
	DBField SupplOrder;
	DBField Deficit;
	DBField QttyWithDeficit;
	DBField DraftRcpt;
	DBField SubstAsscCount;
	DBField Expiry;
	DBField LastSellDate;
	DBField IsPredictTrust;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCSessExcTbl : public DBTable {
public:
	TempCSessExcTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  OrgGoodsID;
		int32  GoodsID;
		int32  UnitID;
		int32  AltGoodsID;
		char   GoodsName[64];
		int16  Sign;
		int16  Pad;
		double Qtty;
		double Rest;
		double Price;
		double Sum;
		double RestSum;
		double AltGoodsQtty;
		double AltGoodsPrice;
		double AltGoodsSum;
		double AltDiff;
	} data;
	struct Key0 {
		int16  Sign;
		int32  GoodsID;
	};
	struct Key1 {
		int16  Sign;
		char   GoodsName[64];
	};
	struct Key2 {
		double Rest;
	};
	struct Key3 {
		double RestSum;
	};
	DBField OrgGoodsID;
	DBField GoodsID;
	DBField UnitID;
	DBField AltGoodsID;
	DBField GoodsName;
	DBField Sign;
	DBField Pad;
	DBField Qtty;
	DBField Rest;
	DBField Price;
	DBField Sum;
	DBField RestSum;
	DBField AltGoodsQtty;
	DBField AltGoodsPrice;
	DBField AltGoodsSum;
	DBField AltDiff;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempDeficitTbl : public DBTable {
public:
	TempDeficitTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  Location;
		int32  GoodsID;
		int32  SupplID;
		int32  HasDeficit;
		double Rest;
		double Req;
		double ReqCost;
		double ReqPrice;
		double UnitPerPack;
		double ReqSalesTax;
		char   Clb[32];
	} data;
	struct Key0 {
		int32  Location;
		int32  GoodsID;
		int32  SupplID;
	};
	struct Key1 {
		int32  Location;
		int32  SupplID;
		int32  GoodsID;
	};
	DBField Location;
	DBField GoodsID;
	DBField SupplID;
	DBField HasDeficit;
	DBField Rest;
	DBField Req;
	DBField ReqCost;
	DBField ReqPrice;
	DBField UnitPerPack;
	DBField ReqSalesTax;
	DBField Clb;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempShipmentAnlzTbl : public DBTable {
public:
	TempShipmentAnlzTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		LDATE  Dt;
		int32  GoodsID;
		char   GoodsName[128];
		double OrderQtty;
		double OrderAmount;
		double ShipmentQtty;
		double ShipmentAmount;
		double AckQtty;
		double AckAmount;
		int32  Reserve;
	} data;
	struct Key0 {
		int32  BillID;
		int32  GoodsID;
	};
	struct Key1 {
		int32  BillID;
		char   GoodsName[128];
	};
	struct Key2 {
		LDATE  Dt;
		int32  BillID;
		char   GoodsName[128];
	};
	DBField BillID;
	DBField Dt;
	DBField GoodsID;
	DBField GoodsName;
	DBField OrderQtty;
	DBField OrderAmount;
	DBField ShipmentQtty;
	DBField ShipmentAmount;
	DBField AckQtty;
	DBField AckAmount;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsOprTbl : public DBTable {
public:
	TempGoodsOprTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  LocID;
		int16  InOutTag;
		int16  Reserve;
		int32  GoodsID;
		int32  GoodsGrp;
		int32  Object;
		char   Text[128];
		double UnitPerPack;
		double Quantity;
		double PhQtty;
		double OldCost;
		double OldPrice;
		double Cost;
		double Price;
		double SumCost;
		double SumPrice;
		double Income;
		double SumCVat;
		double SumPVat;
		double PctVal;
		double Rest;
		double PhRest;
		double RestCostSum;
		double RestPriceSum;
		char   Barcode[24];
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		int16  InOutTag;
		char   Text[128];
		int32  Object;
		int32  LocID;
	};
	struct Key2 {
		int16  InOutTag;
		int32  GoodsGrp;
		char   Text[128];
		int32  Object;
		int32  LocID;
	};
	struct Key3 {
		int16  InOutTag;
		int32  GoodsID;
		int32  Object;
		int32  LocID;
	};
	DBField ID__;
	DBField LocID;
	DBField InOutTag;
	DBField Reserve;
	DBField GoodsID;
	DBField GoodsGrp;
	DBField Object;
	DBField Text;
	DBField UnitPerPack;
	DBField Quantity;
	DBField PhQtty;
	DBField OldCost;
	DBField OldPrice;
	DBField Cost;
	DBField Price;
	DBField SumCost;
	DBField SumPrice;
	DBField Income;
	DBField SumCVat;
	DBField SumPVat;
	DBField PctVal;
	DBField Rest;
	DBField PhRest;
	DBField RestCostSum;
	DBField RestPriceSum;
	DBField Barcode;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsMovTbl : public DBTable {
public:
	TempGoodsMovTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  Grp;
		int32  GoodsID;
		char   GoodsName[128];
		char   Barcode[14];
		double PhUPerU;
		double InRest_Qtty;
		double InRest_Cost;
		double InRest_Price;
		double Rcpt_Qtty;
		double Rcpt_Cost;
		double Rcpt_Price;
		double ARcpt_Qtty;
		double ARcpt_Cost;
		double ARcpt_Price;
		double Rlz_Qtty;
		double Rlz_Cost;
		double Rlz_Price;
		double SRlz_Qtty;
		double SRlz_Cost;
		double SRlz_Price;
		double Expnd_Qtty;
		double Expnd_Cost;
		double Expnd_Price;
		double TRcpt_Qtty;
		double TRcpt_Cost;
		double TRcpt_Price;
		double TExpnd_Qtty;
		double TExpnd_Cost;
		double TExpnd_Price;
		double OutRest_Qtty;
		double OutRest_Cost;
		double OutRest_Price;
	} data;
	struct Key0 {
		int32  Grp;
		char   GoodsName[128];
	};
	struct Key1 {
		char   GoodsName[128];
	};
	DBField Grp;
	DBField GoodsID;
	DBField GoodsName;
	DBField Barcode;
	DBField PhUPerU;
	DBField InRest_Qtty;
	DBField InRest_Cost;
	DBField InRest_Price;
	DBField Rcpt_Qtty;
	DBField Rcpt_Cost;
	DBField Rcpt_Price;
	DBField ARcpt_Qtty;
	DBField ARcpt_Cost;
	DBField ARcpt_Price;
	DBField Rlz_Qtty;
	DBField Rlz_Cost;
	DBField Rlz_Price;
	DBField SRlz_Qtty;
	DBField SRlz_Cost;
	DBField SRlz_Price;
	DBField Expnd_Qtty;
	DBField Expnd_Cost;
	DBField Expnd_Price;
	DBField TRcpt_Qtty;
	DBField TRcpt_Cost;
	DBField TRcpt_Price;
	DBField TExpnd_Qtty;
	DBField TExpnd_Cost;
	DBField TExpnd_Price;
	DBField OutRest_Qtty;
	DBField OutRest_Cost;
	DBField OutRest_Price;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsMov2Tbl : public DBTable {
public:
	TempGoodsMov2Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  GoodsID;
		int32  OpID;
		char   GoodsName[128];
		char   Barcode[24];
		double Qtty;
		double Cost;
		double Price;
		double Discount;
		double Amount;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		char   GoodsName[128];
	};
	DBField ID__;
	DBField GoodsID;
	DBField OpID;
	DBField GoodsName;
	DBField Barcode;
	DBField Qtty;
	DBField Cost;
	DBField Price;
	DBField Discount;
	DBField Amount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsBillCmpTbl : public DBTable {
public:
	TempGoodsBillCmpTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		char   GoodsName[64];
		char   Barcode[24];
		double LhQtty;
		double RhQtty;
		double DiffQtty;
		double LhPrice;
		double RhPrice;
		double DiffPrice;
		int16  IsDiffQtty;
		int16  IsDiffPrice;
	} data;
	struct Key0 {
		int32  GoodsID;
	};
	struct Key1 {
		char   GoodsName[64];
	};
	struct Key2 {
		double DiffQtty;
	};
	struct Key3 {
		double DiffPrice;
	};
	DBField GoodsID;
	DBField GoodsName;
	DBField Barcode;
	DBField LhQtty;
	DBField RhQtty;
	DBField DiffQtty;
	DBField LhPrice;
	DBField RhPrice;
	DBField DiffPrice;
	DBField IsDiffQtty;
	DBField IsDiffPrice;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempAccTrnovrTbl : public DBTable {
public:
	TempAccTrnovrTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		int32  AccRelID;
		int16  Ac;
		int16  Sb;
		int32  Ar;
		int32  CurID;
		int32  RelPersonID;
		char   Name[128];
		int32  Count;
		double InRest;
		double Dbt;
		double Crd;
		double OutRest;
		double GoodsRest;
		int32  DispFlags;
	} data;
	struct Key0 {
		LDATE  Dt;
		int16  Ac;
		int16  Sb;
		int32  Ar;
		int32  CurID;
	};
	struct Key1 {
		LDATE  Dt;
		char   Name[128];
	};
	DBField Dt;
	DBField AccRelID;
	DBField Ac;
	DBField Sb;
	DBField Ar;
	DBField CurID;
	DBField RelPersonID;
	DBField Name;
	DBField Count;
	DBField InRest;
	DBField Dbt;
	DBField Crd;
	DBField OutRest;
	DBField GoodsRest;
	DBField DispFlags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempSellTrnovrTbl : public DBTable {
public:
	TempSellTrnovrTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Ar;
		int32  CurID;
		int32  PersonID;
		int32  TabID;
		char   Name[128];
		double Sell;
		double Payment;
		double Debt;
		double ExpiryDebt;
		double RPaym;
		double Reckon;
		double RDebt;
		double TDebt;
		double AvgPaym;
		int16  NotStop;
		int16  MaxDelay;
	} data;
	struct Key0 {
		int32  ID;
		int32  CurID;
		int32  TabID;
	};
	struct Key1 {
		char   Name[128];
		int32  CurID;
		int32  TabID;
	};
	struct Key2 {
		int32  CurID;
		double Sell;
	};
	struct Key3 {
		int32  CurID;
		double Debt;
	};
	struct Key4 {
		int32  PersonID;
		int32  CurID;
		int32  TabID;
	};
	struct Key5 {
		int16  NotStop;
		char   Name[128];
		int32  CurID;
		int32  TabID;
	};
	DBField ID;
	DBField Ar;
	DBField CurID;
	DBField PersonID;
	DBField TabID;
	DBField Name;
	DBField Sell;
	DBField Payment;
	DBField Debt;
	DBField ExpiryDebt;
	DBField RPaym;
	DBField Reckon;
	DBField RDebt;
	DBField TDebt;
	DBField AvgPaym;
	DBField NotStop;
	DBField MaxDelay;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempTrfrGrpngTbl : public DBTable {
public:
	TempTrfrGrpngTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		LDATE  Dt;
		int32  GoodsID;
		int32  PersonID;
		int32  ArticleID;
		int32  BillID;
		int32  DlvrLocID;
		int32  LocCount;
		double Qtty;
		double PhQtty;
		double Cost;
		double Price;
		double Discount;
		double Income;
		double SaldoQtty;
		double SaldoAmt;
		double PVat;
		double Brutto;
		double LinkQtty;
		double LinkCost;
		double LinkPrice;
		double ExtVal1;
		char   DtText[32];
		char   GoodsText[128];
		char   PersonText[224];
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		LDATE  Dt;
		int32  GoodsID;
		int32  PersonID;
		int32  BillID;
		int32  DlvrLocID;
	};
	DBField ID__;
	DBField Dt;
	DBField GoodsID;
	DBField PersonID;
	DBField ArticleID;
	DBField BillID;
	DBField DlvrLocID;
	DBField LocCount;
	DBField Qtty;
	DBField PhQtty;
	DBField Cost;
	DBField Price;
	DBField Discount;
	DBField Income;
	DBField SaldoQtty;
	DBField SaldoAmt;
	DBField PVat;
	DBField Brutto;
	DBField LinkQtty;
	DBField LinkCost;
	DBField LinkPrice;
	DBField ExtVal1;
	DBField DtText;
	DBField GoodsText;
	DBField PersonText;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempTrfrAnlzTbl : public DBTable {
public:
	TempTrfrAnlzTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		LDATE  Dt;
		int32  OprNo;
		int32  BillID;
		char   BillCode[48];
		int32  LocID;
		int32  ArticleID;
		int32  OpID;
		int32  LotID;
		int32  GoodsID;
		int32  DlvrLocID;
		int32  LinkBillID;
		double Qtty;
		double PhQtty;
		double Cost;
		double Price;
		double Discount;
		double PVat;
		double Brutto;
		double LinkQtty;
		double LinkCost;
		double LinkPrice;
		double ExtVal1;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		int32  GoodsID;
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key3 {
		int32  ArticleID;
		LDATE  Dt;
		int32  OprNo;
	};
	DBField ID__;
	DBField Dt;
	DBField OprNo;
	DBField BillID;
	DBField BillCode;
	DBField LocID;
	DBField ArticleID;
	DBField OpID;
	DBField LotID;
	DBField GoodsID;
	DBField DlvrLocID;
	DBField LinkBillID;
	DBField Qtty;
	DBField PhQtty;
	DBField Cost;
	DBField Price;
	DBField Discount;
	DBField PVat;
	DBField Brutto;
	DBField LinkQtty;
	DBField LinkCost;
	DBField LinkPrice;
	DBField ExtVal1;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempOpGrpngTbl : public DBTable {
public:
	TempOpGrpngTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		LDATE  Dt;
		int32  ObjectID;
		int32  OpID;
		char   OpName[48];
		int32  GoodsTaxGrpID;
		int32  LotTaxGrpID;
		int16  Sign;
		int16  TotalSign;
		int32  TaxFlags;
		int32  Count;
		int32  LnCount;
		int32  AvgLn;
		double Qtty;
		double PhQtty;
		double Cost;
		double Price;
		double Discount;
		double Amount;
		double Income;
		double ExtCost;
		double ExtPrice;
		double VatSum;
		double ExciseSum;
		double STaxSum;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OpID;
		int16  Sign;
		int32  GoodsTaxGrpID;
		int32  LotTaxGrpID;
		int32  TaxFlags;
	};
	DBField ID__;
	DBField Dt;
	DBField ObjectID;
	DBField OpID;
	DBField OpName;
	DBField GoodsTaxGrpID;
	DBField LotTaxGrpID;
	DBField Sign;
	DBField TotalSign;
	DBField TaxFlags;
	DBField Count;
	DBField LnCount;
	DBField AvgLn;
	DBField Qtty;
	DBField PhQtty;
	DBField Cost;
	DBField Price;
	DBField Discount;
	DBField Amount;
	DBField Income;
	DBField ExtCost;
	DBField ExtPrice;
	DBField VatSum;
	DBField ExciseSum;
	DBField STaxSum;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPersonTbl : public DBTable {
public:
	TempPersonTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  TabID;
		char   Name[128];
		uint32 PhoneP;
		uint32 EMailP;
		uint32 AddressP;
		uint32 RAddressP;
		uint32 BnkNameP;
		uint32 BnkAcctP;
		uint32 RegSerialP;
		uint32 FiasAddrGuidP;
		uint32 FiasHouseGuidP;
		uint32 AddrTypeP;
		char   RegNumber[64];
		int32  CityID;
		LDATE  RegInitDate;
		LDATE  RegExpiry;
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
		int32  TabID;
	};
	struct Key1 {
		char   Name[128];
	};
	DBField ID;
	DBField TabID;
	DBField Name;
	DBField PhoneP;
	DBField EMailP;
	DBField AddressP;
	DBField RAddressP;
	DBField BnkNameP;
	DBField BnkAcctP;
	DBField RegSerialP;
	DBField FiasAddrGuidP;
	DBField FiasHouseGuidP;
	DBField AddrTypeP;
	DBField RegNumber;
	DBField CityID;
	DBField RegInitDate;
	DBField RegExpiry;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempOrderTbl : public DBTable {
public:
	TempOrderTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[252];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Name[252];
	};
	DBField ID;
	DBField Name;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempDoubleIDTbl : public DBTable {
public:
	TempDoubleIDTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  PrmrID;
		int32  ScndID;
		char   Name[128];
	} data;
	struct Key0 {
		int32  PrmrID;
		int32  ScndID;
	};
	struct Key1 {
		int32  ScndID;
		int32  PrmrID;
	};
	struct Key2 {
		char   Name[128];
	};
	DBField PrmrID;
	DBField ScndID;
	DBField Name;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempAssocTbl : public DBTable {
public:
	TempAssocTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  PrmrID;
		int32  ScndID;
	} data;
	struct Key0 {
		int32  PrmrID;
		int32  ScndID;
	};
	DBField PrmrID;
	DBField ScndID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempAccturnGrpngTbl : public DBTable {
public:
	TempAccturnGrpngTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		int32  DbtAccID;
		int16  DbtAc;
		int16  DbtSb;
		int32  DbtAr;
		int32  CrdAccID;
		int16  CrdAc;
		int16  CrdSb;
		int32  CrdAr;
		int32  CurID;
		int32  Count;
		double Amount;
		char   DbtAccName[48];
		char   CrdAccName[48];
		uint8  Reserve[8]; // raw
	} data;
	struct Key0 {
		LDATE  Dt;
		int32  DbtAccID;
		int32  CrdAccID;
		int32  CurID;
	};
	struct Key1 {
		LDATE  Dt;
		int16  DbtAc;
		int16  DbtSb;
		int32  DbtAr;
		int16  CrdAc;
		int16  CrdSb;
		int32  CrdAr;
		int32  CurID;
	};
	struct Key2 {
		LDATE  Dt;
		int32  CrdAccID;
		int32  DbtAccID;
		int32  CurID;
	};
	struct Key3 {
		LDATE  Dt;
		int16  CrdAc;
		int16  CrdSb;
		int32  CrdAr;
		int16  DbtAc;
		int16  DbtSb;
		int32  DbtAr;
		int32  CurID;
	};
	DBField Dt;
	DBField DbtAccID;
	DBField DbtAc;
	DBField DbtSb;
	DBField DbtAr;
	DBField CrdAccID;
	DBField CrdAc;
	DBField CrdSb;
	DBField CrdAr;
	DBField CurID;
	DBField Count;
	DBField Amount;
	DBField DbtAccName;
	DBField CrdAccName;
	DBField Reserve;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempAccAnlzTbl : public DBTable {
public:
	TempAccAnlzTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		int32  OprNo;
		int32  BillID;
		int16  Reverse;
		int16  Pad;
		int32  ThisAccRelID;
		int32  Acc;
		int16  Ac;
		int16  Sb;
		int32  Ar;
		int32  CurID;
		double Dbt;
		double Crd;
		double Rest;
		char   OrdData[32];
	} data;
	struct Key0 {
		char   OrdData[32];
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	DBField Dt;
	DBField OprNo;
	DBField BillID;
	DBField Reverse;
	DBField Pad;
	DBField ThisAccRelID;
	DBField Acc;
	DBField Ac;
	DBField Sb;
	DBField Ar;
	DBField CurID;
	DBField Dbt;
	DBField Crd;
	DBField Rest;
	DBField OrdData;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempBillTbl : public DBTable {
public:
	TempBillTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		LDATE  Dt;
		int32  BillNo;
		int32  OpID;
		int32  Object;
		double Debit;
		double Credit;
		double Saldo;
		LDATE  DueDate;
		int32  LicRegID;
	} data;
	struct Key0 {
		int32  BillID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key2 {
		int32  OpID;
		LDATE  Dt;
		int32  BillNo;
	};
	struct Key3 {
		int32  Object;
		LDATE  Dt;
		int32  BillNo;
	};
	DBField BillID;
	DBField Dt;
	DBField BillNo;
	DBField OpID;
	DBField Object;
	DBField Debit;
	DBField Credit;
	DBField Saldo;
	DBField DueDate;
	DBField LicRegID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempFreightTbl : public DBTable {
public:
	TempFreightTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  BillID;
		LDATE  BillDate;
		int32  ObjectID;
		int32  LocID;
		double Amount;
		double Brutto;
		double PackCount;
		double Volume;
		LDATE  ShipmDate;
		LDATE  ArrvlDate;
		int32  ShipID;
		int32  PortID;
		int32  DlvrAddrID;
		int32  AgentID;
		char   Code[24];
		char   Shipped[2];
		int16  Reserve;
		uint32 ShipNameP;
		char   PortName[48];
		char   DlvrAddr[64];
	} data;
	struct Key0 {
		int32  BillID;
	};
	struct Key1 {
		LDATE  BillDate;
		char   Code[24];
	};
	struct Key2 {
		LDATE  ArrvlDate;
		char   PortName[48];
	};
	struct Key3 {
		char   PortName[48];
		LDATE  ArrvlDate;
	};
	struct Key4 {
		char   DlvrAddr[64];
		LDATE  ArrvlDate;
	};
	DBField BillID;
	DBField BillDate;
	DBField ObjectID;
	DBField LocID;
	DBField Amount;
	DBField Brutto;
	DBField PackCount;
	DBField Volume;
	DBField ShipmDate;
	DBField ArrvlDate;
	DBField ShipID;
	DBField PortID;
	DBField DlvrAddrID;
	DBField AgentID;
	DBField Code;
	DBField Shipped;
	DBField Reserve;
	DBField ShipNameP;
	DBField PortName;
	DBField DlvrAddr;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempLotTbl : public DBTable {
public:
	TempLotTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LotID;
		LDATE  Dt;
		LDATE  OrgDt;
		int32  OrgID;
		int32  OprNo;
		int32  GoodsID;
		int32  SFlags;
		char   GoodsName[128];
		double BegRest;
		double EndRest;
		double QttyPlus;
		double QttyMinus;
		char   Serial[32];
		char   BillStatus[48];
	} data;
	struct Key0 {
		int32  LotID;
	};
	struct Key1 {
		LDATE  Dt;
		int32  OprNo;
	};
	struct Key2 {
		char   GoodsName[128];
		LDATE  Dt;
		int32  OprNo;
	};
	DBField LotID;
	DBField Dt;
	DBField OrgDt;
	DBField OrgID;
	DBField OprNo;
	DBField GoodsID;
	DBField SFlags;
	DBField GoodsName;
	DBField BegRest;
	DBField EndRest;
	DBField QttyPlus;
	DBField QttyMinus;
	DBField Serial;
	DBField BillStatus;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsTaxAnlzTbl : public DBTable {
public:
	TempGoodsTaxAnlzTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		char   BillNo[24];
		int32  LotID;
		int32  GoodsID;
		int32  GoodsGrpID;
		int32  GoodsTaxGrpID;
		int32  LotTaxGrpID;
		int32  TaxFlags;
		char   Name[128];
		char   TaxStr[48];
		double Qtty;
		double PhQtty;
		double TrnovrCost;
		double TrnovrPrice;
		double Income;
		double ExciseSum;
		double C_VATSum;
		double C_STaxSum;
		double VATSum;
		double IncVATSum;
		double STaxSum;
		double ExpQtty;
		double Rest;
	} data;
	struct Key0 {
		LDATE  Dt;
		int32  GoodsID;
		int32  GoodsTaxGrpID;
		int32  LotTaxGrpID;
		int32  TaxFlags;
	};
	struct Key1 {
		LDATE  Dt;
		char   Name[128];
		int32  GoodsTaxGrpID;
		int32  LotTaxGrpID;
		int32  TaxFlags;
	};
	struct Key2 {
		LDATE  Dt;
		int32  GoodsGrpID;
		char   Name[128];
	};
	DBField Dt;
	DBField BillNo;
	DBField LotID;
	DBField GoodsID;
	DBField GoodsGrpID;
	DBField GoodsTaxGrpID;
	DBField LotTaxGrpID;
	DBField TaxFlags;
	DBField Name;
	DBField TaxStr;
	DBField Qtty;
	DBField PhQtty;
	DBField TrnovrCost;
	DBField TrnovrPrice;
	DBField Income;
	DBField ExciseSum;
	DBField C_VATSum;
	DBField C_STaxSum;
	DBField VATSum;
	DBField IncVATSum;
	DBField STaxSum;
	DBField ExpQtty;
	DBField Rest;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPaymPlanTbl : public DBTable {
public:
	TempPaymPlanTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		LDATE  PayPlanDt;
		int32  BillID;
		int32  ObjID;
		char   Name[128];
		double Amount;
		double Interest;
		double Paym;
		double Debt;
	} data;
	struct Key0 {
		LDATE  Dt;
		int32  ObjID;
		int32  BillID;
	};
	struct Key1 {
		LDATE  Dt;
		char   Name[128];
	};
	DBField Dt;
	DBField PayPlanDt;
	DBField BillID;
	DBField ObjID;
	DBField Name;
	DBField Amount;
	DBField Interest;
	DBField Paym;
	DBField Debt;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempSyncCmpTbl : public DBTable {
public:
	TempSyncCmpTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ObjType;
		int16  CommIdPfx;
		int32  CommID;
		int16  Reserve2;
		int32  SrcID;
		int32  DestID;
		char   SrcName[64];
		char   DestName[64];
		int16  ErrCode;
		int16  Reserve;
		LDATE  SrcModDt;
		LTIME  SrcModTm;
		LDATE  DestModDt;
		LTIME  DestModTm;
		double CmpScore;
	} data;
	struct Key0 {
		int32  ObjType;
		int16  CommIdPfx;
		int32  CommID;
	};
	struct Key1 {
		int32  ObjType;
		int32  SrcID;
	};
	struct Key2 {
		int32  ObjType;
		int32  DestID;
	};
	struct Key3 {
		int32  ObjType;
		char   SrcName[64];
	};
	struct Key4 {
		int32  ObjType;
		char   DestName[64];
	};
	struct Key5 {
		int32  ObjType;
		int16  ErrCode;
		double CmpScore;
	};
	DBField ObjType;
	DBField CommIdPfx;
	DBField CommID;
	DBField Reserve2;
	DBField SrcID;
	DBField DestID;
	DBField SrcName;
	DBField DestName;
	DBField ErrCode;
	DBField Reserve;
	DBField SrcModDt;
	DBField SrcModTm;
	DBField DestModDt;
	DBField DestModTm;
	DBField CmpScore;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempAssetTbl : public DBTable {
public:
	TempAssetTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  LotID;
		int32  GoodsID;
		int32  GrpID;
		char   Name[64];
		char   Serial[32];
		int16  WrOffTerm;
		int16  Reserve;
		LDATE  Dt;
		LDATE  ExplDt;
		double Cost;
		double Price;
		double Deprec;
		double Cost2;
		double Price2;
		double Deprec2;
		double DiffCost;
		double DiffDeprec;
	} data;
	struct Key0 {
		int32  LotID;
	};
	struct Key1 {
		int32  GrpID;
		char   Name[64];
		LDATE  Dt;
		int32  LotID;
	};
	struct Key2 {
		char   Name[64];
		LDATE  Dt;
		int32  LotID;
	};
	DBField LotID;
	DBField GoodsID;
	DBField GrpID;
	DBField Name;
	DBField Serial;
	DBField WrOffTerm;
	DBField Reserve;
	DBField Dt;
	DBField ExplDt;
	DBField Cost;
	DBField Price;
	DBField Deprec;
	DBField Cost2;
	DBField Price2;
	DBField Deprec2;
	DBField DiffCost;
	DBField DiffDeprec;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempQuotSerialTbl : public DBTable {
public:
	TempQuotSerialTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		int32  QuotKindID;
		int32  LocID;
		int32  ArticleID;
		LDATE  Dt;
		LTIME  Tm;
		int32  ValF;
		double Val;
		char   ValS[12];
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField GoodsID;
	DBField QuotKindID;
	DBField LocID;
	DBField ArticleID;
	DBField Dt;
	DBField Tm;
	DBField ValF;
	DBField Val;
	DBField ValS;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempQuotTbl : public DBTable {
public:
	TempQuotTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  GoodsID;
		int32  LocID;
		int32  ArticleID;
		int32  PeriodIdx;
		char   GoodsName[128];
		uint32 QuotP1;
		uint32 QuotP2;
		uint32 QuotP3;
		uint32 QuotP4;
		uint32 QuotP5;
		uint32 QuotP6;
		uint32 QuotP7;
		uint32 QuotP8;
		uint32 QuotP9;
		uint32 QuotP10;
		uint32 QuotP11;
		uint32 QuotP12;
		uint32 QuotP13;
		uint32 QuotP14;
		uint32 QuotP15;
		uint32 QuotP16;
		uint32 QuotP17;
		uint32 QuotP18;
		uint32 QuotP19;
		uint32 QuotP20;
		uint32 QuotP21;
		uint32 QuotP22;
		uint32 QuotP23;
		uint32 QuotP24;
		uint32 QuotP25;
		uint32 QuotP26;
		uint32 QuotP27;
		uint32 QuotP28;
		uint32 QuotP29;
		uint32 QuotP30;
		uint32 QuotP31;
		uint32 QuotP32;
	} data;
	struct Key0 {
		int32  ID__;
	};
	struct Key1 {
		int32  GoodsID;
		int32  ArticleID;
		int32  LocID;
		int32  PeriodIdx;
	};
	DBField ID__;
	DBField GoodsID;
	DBField LocID;
	DBField ArticleID;
	DBField PeriodIdx;
	DBField GoodsName;
	DBField QuotP1;
	DBField QuotP2;
	DBField QuotP3;
	DBField QuotP4;
	DBField QuotP5;
	DBField QuotP6;
	DBField QuotP7;
	DBField QuotP8;
	DBField QuotP9;
	DBField QuotP10;
	DBField QuotP11;
	DBField QuotP12;
	DBField QuotP13;
	DBField QuotP14;
	DBField QuotP15;
	DBField QuotP16;
	DBField QuotP17;
	DBField QuotP18;
	DBField QuotP19;
	DBField QuotP20;
	DBField QuotP21;
	DBField QuotP22;
	DBField QuotP23;
	DBField QuotP24;
	DBField QuotP25;
	DBField QuotP26;
	DBField QuotP27;
	DBField QuotP28;
	DBField QuotP29;
	DBField QuotP30;
	DBField QuotP31;
	DBField QuotP32;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGoodsCargoTbl : public DBTable {
public:
	TempGoodsCargoTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  GoodsID;
		int32  Brutto;
		int32  Length;
		int32  Width;
		int32  Height;
		double MinStock;
		double Package;
		char   StrucType[14];
	} data;
	struct Key0 {
		int32  GoodsID;
	};
	DBField GoodsID;
	DBField Brutto;
	DBField Length;
	DBField Width;
	DBField Height;
	DBField MinStock;
	DBField Package;
	DBField StrucType;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPrjTaskTbl : public DBTable {
public:
	TempPrjTaskTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  TabID;
		int32  EmployerID;
		int32  ClientID;
		LDATE  StartDt;
		char   ClientName[128];
		char   EmployerName[128];
		double TabParam;
		double TaskCount;
	} data;
	struct Key0 {
		int32  TabID;
		LDATE  StartDt;
	};
	struct Key1 {
		int32  TabID;
		int32  ClientID;
	};
	struct Key2 {
		int32  TabID;
		int32  EmployerID;
	};
	DBField TabID;
	DBField EmployerID;
	DBField ClientID;
	DBField StartDt;
	DBField ClientName;
	DBField EmployerName;
	DBField TabParam;
	DBField TaskCount;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPriceAnlzTbl : public DBTable {
public:
	TempPriceAnlzTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  TabID;
		int32  SupplID;
		int32  GoodsID;
		char   GoodsName[64];
		char   SupplName[48];
		double ContractCost;
		double Cost;
		double CostDiff;
	} data;
	struct Key0 {
		int32  TabID;
		int32  SupplID;
		int32  GoodsID;
	};
	DBField TabID;
	DBField SupplID;
	DBField GoodsID;
	DBField GoodsName;
	DBField SupplName;
	DBField ContractCost;
	DBField Cost;
	DBField CostDiff;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPersonEventTbl : public DBTable {
public:
	TempPersonEventTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ID2;
		LDATE  Dt;
		char   DtSubst[32];
		char   Name[128];
		int32  Count;
		int32  AvgEvTime;
	} data;
	struct Key0 {
		int32  ID;
		int32  ID2;
	};
	struct Key1 {
		LDATE  Dt;
		int32  ID;
		int32  ID2;
	};
	DBField ID;
	DBField ID2;
	DBField Dt;
	DBField DtSubst;
	DBField Name;
	DBField Count;
	DBField AvgEvTime;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPersonRelTbl : public DBTable {
public:
	TempPersonRelTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  PrmrPersonID;
		int32  ScndPersonID;
		int32  RelTypeID;
		char   RelName[48];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  PrmrPersonID;
		int32  ScndPersonID;
		int32  RelTypeID;
	};
	DBField ID;
	DBField PrmrPersonID;
	DBField ScndPersonID;
	DBField RelTypeID;
	DBField RelName;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempArAgtTbl : public DBTable {
public:
	TempArAgtTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ArID;
		LDATE  Beg;
		LDATE  Expiry;
		int32  DefPayTerm;
		int32  DefDlvrTerm;
		int32  DefAgentID;
		int32  DefQuotKindID;
		int32  ExtObjectID;
		double Discount;
		double MaxDiscount;
		double MaxCredit;
		char   Code[24];
		int32  Flags;
		double MaxCredit1;
		double MaxCredit2;
		double MaxCredit3;
		double MaxCredit4;
		double MaxCredit5;
		double MaxCredit6;
		double MaxCredit7;
		double MaxCredit8;
		double MaxCredit9;
		double MaxCredit10;
		double MaxCredit11;
		double MaxCredit12;
		double MaxCredit13;
		double MaxCredit14;
		double MaxCredit15;
		int32  StopFlags;
		char   Msg[128];   // note
	} data;
	struct Key0 {
		int32  ArID;
	};
	DBField ArID;
	DBField Beg;
	DBField Expiry;
	DBField DefPayTerm;
	DBField DefDlvrTerm;
	DBField DefAgentID;
	DBField DefQuotKindID;
	DBField ExtObjectID;
	DBField Discount;
	DBField MaxDiscount;
	DBField MaxCredit;
	DBField Code;
	DBField Flags;
	DBField MaxCredit1;
	DBField MaxCredit2;
	DBField MaxCredit3;
	DBField MaxCredit4;
	DBField MaxCredit5;
	DBField MaxCredit6;
	DBField MaxCredit7;
	DBField MaxCredit8;
	DBField MaxCredit9;
	DBField MaxCredit10;
	DBField MaxCredit11;
	DBField MaxCredit12;
	DBField MaxCredit13;
	DBField MaxCredit14;
	DBField MaxCredit15;
	DBField StopFlags;
	DBField Msg;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempScaleTbl : public DBTable {
public:
	TempScaleTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[48];
		char   Port[20];
		int32  QuotKindID;
		int32  ScaleTypeID;
		char   ScaleTypeName[30];
		int32  ProtocolVer;
		int32  LogNum;
		int32  LocID;
		int32  AltGoodsGrp;
	} data;
	struct Key0 {
		int32  ID;
	};
	DBField ID;
	DBField Name;
	DBField Port;
	DBField QuotKindID;
	DBField ScaleTypeID;
	DBField ScaleTypeName;
	DBField ProtocolVer;
	DBField LogNum;
	DBField LocID;
	DBField AltGoodsGrp;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempLogFileMonTbl : public DBTable {
public:
	TempLogFileMonTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID__;
		int32  LogFileId;
		int32  SubFile;
		int32  LineNo;
		LDATE  Dt;
		LTIME  Tm;
		char   UserName[32];
		char   DbSymb[32];
		char   Text[252];  // note
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID__;
	DBField LogFileId;
	DBField SubFile;
	DBField LineNo;
	DBField Dt;
	DBField Tm;
	DBField UserName;
	DBField DbSymb;
	DBField Text;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCashNodeTbl : public DBTable {
public:
	TempCashNodeTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ParentID;
		char   Name[48];
		char   Symb[20];
		char   ParentName[48];
		int32  CashTypeID;
		char   CashTypeName[32];
		char   Port[24];
		int32  LocID;
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   ParentName[48];
		char   Name[48];
	};
	struct Key2 {
		char   Name[48];
	};
	DBField ID;
	DBField ParentID;
	DBField Name;
	DBField Symb;
	DBField ParentName;
	DBField CashTypeID;
	DBField CashTypeName;
	DBField Port;
	DBField LocID;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempReportTbl : public DBTable {
public:
	TempReportTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  StrucID;
		int32  Type;
		int32  Flags;
		LDATE  ModifDt;
		char   StdName[64];
		char   StrucName[64];
		char   Descr[64];
		char   Path[255];
		char   Format[32];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   StdName[64];
	};
	struct Key2 {
		char   StrucName[64];
	};
	struct Key3 {
		int32  Type;
	};
	DBField ID;
	DBField StrucID;
	DBField Type;
	DBField Flags;
	DBField ModifDt;
	DBField StdName;
	DBField StrucName;
	DBField Descr;
	DBField Path;
	DBField Format;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempPalmTbl : public DBTable {
public:
	TempPalmTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[48];
		char   Symb[20];
		int32  LocID;
		int32  GoodsGrpID;
		int32  OrderOpID;
		int32  FTPAcctID;
		int32  Flags;
		int32  GroupID;
		char   GroupName[32];
		int32  AgentID;
		char   Path[255];
		char   FtpPath[255];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Name[48];
	};
	DBField ID;
	DBField Name;
	DBField Symb;
	DBField LocID;
	DBField GoodsGrpID;
	DBField OrderOpID;
	DBField FTPAcctID;
	DBField Flags;
	DBField GroupID;
	DBField GroupName;
	DBField AgentID;
	DBField Path;
	DBField FtpPath;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempLongOrderTbl : public DBTable {
public:
	TempLongOrderTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[192];
	} data;
	struct Key0 {
		int32  ID;
	};
	DBField ID;
	DBField Name;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempTransportTbl : public DBTable {
public:
	TempTransportTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[64];
		int32  TrType;
		int32  ModelID;
		int32  OwnerID;
		int32  CaptainID;
		int32  CountryID;
		double Capacity;
		char   Code[16];
		char   TrailCode[16];
		char   ModelName[48];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		char   Name[64];
	};
	DBField ID;
	DBField Name;
	DBField TrType;
	DBField ModelID;
	DBField OwnerID;
	DBField CaptainID;
	DBField CountryID;
	DBField Capacity;
	DBField Code;
	DBField TrailCode;
	DBField ModelName;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempBudgetTbl : public DBTable {
public:
	TempBudgetTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ParentID;
		char   Code[20];
		char   Name[48];
		LDATE  LowDt;
		LDATE  UppDt;
	} data;
	struct Key0 {
		int32  ID;
	};
	DBField ID;
	DBField ParentID;
	DBField Code;
	DBField Name;
	DBField LowDt;
	DBField UppDt;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempBudgItemTbl : public DBTable {
public:
	TempBudgItemTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  BudgetID;
		int32  Acc;
		int32  Flags;
		int32  Kind;
		LDATE  Dt;
		char   AccText[48];
		char   DtText[32];
		double PlanAmt;
		double FactAmt;
		char   Memo[512];  // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  BudgetID;
		int32  Acc;
		int32  Kind;
		LDATE  Dt;
	};
	DBField ID;
	DBField BudgetID;
	DBField Acc;
	DBField Flags;
	DBField Kind;
	DBField Dt;
	DBField AccText;
	DBField DtText;
	DBField PlanAmt;
	DBField FactAmt;
	DBField Memo;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempBizScTemplTbl : public DBTable {
public:
	TempBizScTemplTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[48];
		char   Symb[20];
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
	};
	DBField ID;
	DBField Name;
	DBField Symb;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempCCheckTbl : public DBTable {
public:
	TempCCheckTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  Code;
		int32  CashID;
		int32  UserID;
		int32  SessID;
		LDATE  Dt;
		LTIME  Tm;
		int32  Flags;
		char   Amount[8];  // money[8.2]
		char   Discount[8]; // money[8.2]
		int32  SCardID;
		int32  CrdSCardID;
		int32  GiftCardID;
		int32  TempReplaceID;
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		LDATE  Dt;
		LTIME  Tm;
		int32  CashID;
	};
	struct Key2 {
		int32  CashID;
		int32  Code;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		int32  SessID;
		int32  CashID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key4 {
		int32  SCardID;
		LDATE  Dt;
		LTIME  Tm;
	};
	DBField ID;
	DBField Code;
	DBField CashID;
	DBField UserID;
	DBField SessID;
	DBField Dt;
	DBField Tm;
	DBField Flags;
	DBField Amount;
	DBField Discount;
	DBField SCardID;
	DBField CrdSCardID;
	DBField GiftCardID;
	DBField TempReplaceID;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempSysJournalTbl : public DBTable {
public:
	TempSysJournalTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  ID2;
		LDATE  Dt;
		uint32 DtSubstP;
		uint32 NameP;
		uint32 NameBeforeEvP;
		int32  Count;
		int32  AvgEvTime;
	} data;
	struct Key0 {
		int32  ID;
		int32  ID2;
	};
	struct Key1 {
		LDATE  Dt;
		int32  ID;
		int32  ID2;
	};
	DBField ID;
	DBField ID2;
	DBField Dt;
	DBField DtSubstP;
	DBField NameP;
	DBField NameBeforeEvP;
	DBField Count;
	DBField AvgEvTime;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempGlobUserAccTbl : public DBTable {
public:
	TempGlobUserAccTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[48];
		int32  PersonID;
		char   Guid[40];
		int32  Flags;
		int32  GlobalService;
	} data;
	struct Key0 {
		int32  ID;
	};
	DBField ID;
	DBField Name;
	DBField PersonID;
	DBField Guid;
	DBField Flags;
	DBField GlobalService;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempDBDivTbl : public DBTable {
public:
	TempDBDivTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		char   Name[48];
		char   Address[256];
		int32  Flags;
	} data;
	struct Key0 {
		int32  ID;
	};
	DBField ID;
	DBField Name;
	DBField Address;
	DBField Flags;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TempUserProfileTbl : public DBTable {
public:
	TempUserProfileTbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int64  SeqID;
		char   DbID[40];
		char   SessID[40];
		int32  ThreadId;
		int32  FuncID;
		char   DbSymb[32];
		int32  FuncVer;
		int64  Clock;
		LDATE  Dt;
		LTIME  Tm;
		int32  Flags;
		double Factor1;
		double Factor2;
		double Factor3;
		double Factor4;
		double Factor5;
		double Factor6;
		double Factor7;
		double Factor8;
		char   FuncName[64];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int64  SeqID;
		char   DbID[40];
		char   SessID[40];
	};
	struct Key2 {
		char   DbID[40];
		char   SessID[40];
		int32  FuncID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key3 {
		char   DbSymb[32];
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key4 {
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key5 {
		char   FuncName[64];
	};
	DBField ID;
	DBField SeqID;
	DBField DbID;
	DBField SessID;
	DBField ThreadId;
	DBField FuncID;
	DBField DbSymb;
	DBField FuncVer;
	DBField Clock;
	DBField Dt;
	DBField Tm;
	DBField Flags;
	DBField Factor1;
	DBField Factor2;
	DBField Factor3;
	DBField Factor4;
	DBField Factor5;
	DBField Factor6;
	DBField Factor7;
	DBField Factor8;
	DBField FuncName;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TestRef01Tbl : public DBTable {
public:
	TestRef01Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  L;
		int16  I16;
		uint16 UI16;
		double F64;
		float  F32;
		LDATE  D;
		LTIME  T;
		char   S48[48];
		char   S12[12];
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  L;
		int16  I16;
	};
	struct Key2 {
		int32  L;
	};
	struct Key3 {
		int32  L;
		uint16 UI16;
	};
	struct Key4 {
		double F64;
		int32  L;
	};
	struct Key5 {
		char   S48[48];
	};
	struct Key6 {
		int32  L;
		char   S12[12];
		char   S48[48];
	};
	struct Key7 {
		LDATE  D;
		LTIME  T;
	};
	DBField ID;
	DBField L;
	DBField I16;
	DBField UI16;
	DBField F64;
	DBField F32;
	DBField D;
	DBField T;
	DBField S48;
	DBField S12;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TestRef02Tbl : public DBTable {
public:
	TestRef02Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		int32  ID;
		int32  L;
		int16  I16;
		uint16 UI16;
		double F64;
		float  F32;
		LDATE  D;
		LTIME  T;
		char   S48[48];
		char   S12[12];
		char   N[252];     // note
	} data;
	struct Key0 {
		int32  ID;
	};
	struct Key1 {
		int32  L;
		int16  I16;
	};
	struct Key2 {
		int32  L;
	};
	struct Key3 {
		int32  L;
		uint16 UI16;
	};
	struct Key4 {
		double F64;
		int32  L;
	};
	struct Key5 {
		char   S48[48];
	};
	struct Key6 {
		int32  L;
		char   S12[12];
		char   S48[48];
	};
	struct Key7 {
		LDATE  D;
		LTIME  T;
	};
	DBField ID;
	DBField L;
	DBField I16;
	DBField UI16;
	DBField F64;
	DBField F32;
	DBField D;
	DBField T;
	DBField S48;
	DBField S12;
	DBField N;
};
#pragma pack(pop)

#pragma pack(push)
#pragma pack(1)
class TestTa01Tbl : public DBTable {
public:
	TestTa01Tbl(const char * pFileName = 0);

	struct Rec {
		Rec();
		Rec & Clear();
		LDATE  Dt;
		LTIME  Tm;
		int32  Ref1ID;
		int32  Ref2ID;
		int32  LVal;
		int64  I64Val;
		int16  IVal;
		uint16 UIVal;
		double RVal1;
		double RVal2;
		S_GUID GuidVal;
		char   S[32];
		SLob   TextField;
	} data;
	struct Key0 {
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key1 {
		int32  Ref1ID;
		LDATE  Dt;
		LTIME  Tm;
	};
	struct Key2 {
		int64  I64Val;
	};
	DBField Dt;
	DBField Tm;
	DBField Ref1ID;
	DBField Ref2ID;
	DBField LVal;
	DBField I64Val;
	DBField IVal;
	DBField UIVal;
	DBField RVal1;
	DBField RVal2;
	DBField GuidVal;
	DBField S;
	DBField TextField;
};
#pragma pack(pop)


#endif // __PPDBS_H
